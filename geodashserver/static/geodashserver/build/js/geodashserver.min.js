var geodash={init:{},directives:{},controllers:{},filters:{},vecmath:{},tilemath:{},api:{},listeners:{},ui:{}};geodash.init.templates=function(e){void 0!=geodash.templates&&(geodash.meta.templates=[],$.each(geodash.templates,function(a,t){geodash.meta.templates.push(a),e.run(function(e){e.put(a,t)})}))},geodash.init.filters=function(e){void 0!=geodash.filters&&(geodash.meta.filters=[],$.each(geodash.filters,function(a,t){geodash.meta.filters.push(a),e.filter(a,t)}))},geodash.init.directives=function(e){void 0!=geodash.directives&&(geodash.meta.directives=[],$.each(geodash.directives,function(a,t){geodash.meta.directives.push(a),e.directive(a,t)}))},geodash.init.listeners=function(){$("body").on("click",".btn-clear",function(e){var a=$(e.currentTarget).attr("data-clear");try{$(a).typeahead("close")}catch(t){}$(a).each(function(){var e=$(this);if(e.val(null),void 0!=e.data("backend")){var a=$("#"+e.data("backend"));a.val(null),a.trigger("input"),a.change()}})}),$("body").on("click",".geodash-intent",function(e){e.preventDefault();var a=$(this),t=geodash.api.getScope(a.attr("data-intent-ctrl"));if(a.hasClass("geodash-toggle")){var n=JSON.parse(a.attr("data-intent-data"));a.hasClass("geodash-off")?(a.removeClass("geodash-off"),geodash.api.intend(a.attr("data-intent-names")[0],n,t)):(a.addClass("geodash-off"),geodash.api.intend(a.attr("data-intent-names")[1],n,t))}else if(a.hasClass("geodash-radio")){var i=a.parents(".geodash-radio-group:first").find(".geodash-radio").not(a);if(!a.hasClass("geodash-on")){a.addClass("geodash-on"),a.data("intent-class-on")&&(a.addClass(a.data("intent-class-on")),i.removeClass(a.data("intent-class-on"))),i.removeClass("geodash-on"),a.data("intent-class-off")&&(a.removeClass(a.data("intent-class-off")),i.addClass(a.data("intent-class-off")));var o=a.attr("data-intent-name"),n=JSON.parse(a.attr("data-intent-data"));geodash.api.intend(o,n,t)}}else{var o=a.attr("data-intent-name"),n=JSON.parse(a.attr("data-intent-data"));geodash.api.intend(o,n,t)}})},geodash.init.typeahead=function(e){$(".typeahead",e).each(function(){var e=$(this),a=(e.data("placeholder"),e.data("initialData")),t=(e.data("width"),e.data("height"),e.data("template-empty")),n=(e.data("template-suggestion"),[]);if(angular.isString(a))if("layers"==a){n=[];var i=angular.element("#geodash-main").scope().map_config.featurelayers;void 0!=i&&(n=n.concat($.map(i,function(e,a){return{id:e.id,text:e.id}})));var o=angular.element("#geodash-main").scope().map_config.baselayers;void 0!=o&&(n=n.concat($.map(o,function(e,a){return{id:e.id,text:e.id}})))}else if("featurelayers"==a){n=[];var i=angular.element("#geodash-main").scope().map_config.featurelayers;n=$.map(i,function(e,a){return{id:a,text:a}})}else n=geodash.initial_data.data[a];else Array.isArray(a)&&(n=$.map(a,function(e,a){return{id:e,text:e}}));if(angular.isDefined(n)&&n.length>0){n.sort(function(e,a){var t=e.text.toLowerCase(),n=a.text.toLowerCase();return n>t?-1:t>n?1:0});var l=new Bloodhound({identify:function(e){return e.text},datumTokenizer:function(e){return Bloodhound.tokenizers.whitespace(e.text)},queryTokenizer:Bloodhound.tokenizers.whitespace,local:n});e.data("engine",l),e.typeahead("destroy","NoCached"),e.typeahead(null,{name:e.attr("name"),minLength:0,limit:10,hint:!1,highlight:!0,displayKey:"text",source:function(e,a){l.ttAdapter()(e,a)},templates:{empty:t,suggestion:function(e){return"<p><strong>"+e.text+"</strong> - "+e.id+"</p>"},footer:function(e){return"<div>Searched for <strong>"+e.query+"</strong></div>"}}}).on("blur",function(e){var a=l.get($(this).val());$("#"+$(this).data("backend")).val(1==a.length?a[0].id:null).trigger("input").change()}).on("typeahead:change",function(e,a){console.log("Event: ",e,a);var t=l.get(a);$("#"+$(this).data("backend")).val(1==t.length?t[0].id:null).trigger("input").change()}).on("typeahead:select typeahead:autocomplete typeahead:cursorchange",function(e,a){console.log("Event: ",e,a);$("#"+$(this).data("backend")).val(extract("id",a,null)).trigger("input").change()})}})},geodash.api.getOption=function(e,a){return void 0!=e&&null!=e?e[a]:void 0},geodash.api.getScope=function(e){return angular.element("#"+e).isolateScope()||angular.element("#"+e).scope()},geodash.api.getDashboardConfig=function(e){var a=geodash.api.getOption(e,"$scope")||geodash.api.getOption(e,"scope")||geodash.api.getScope("geodash-main");return a.map_config},geodash.api.getPage=function(e,a){var t=geodash.api.getDashboardConfig(a),n=$.grep(t.pages,function(a,t){return a.id==e});return 1==n.length?n[0].url:void 0},geodash.api.hasLayer=function(e,a){var t=$.grep(a,function(a,t){return a.id==e});return 1==t.length},geodash.api.getLayer=function(e,a){var t=void 0,n=$.grep(a,function(a,t){return a.id==e});return 1==n.length&&(t=n[0]),t},geodash.api.getBaseLayer=function(e,a){var t=geodash.api.getDashboardConfig(a);return geodash.api.getLayer(e,t.baselayers)},geodash.api.hasBaseLayer=function(e,a){var t=geodash.api.getDashboardConfig(a);return geodash.api.hasLayer(e,t.baselayers)},geodash.api.getFeatureLayer=function(e,a){var t=geodash.api.getDashboardConfig(a);return geodash.api.getLayer(e,t.featurelayers)},geodash.api.hasFeatureLayer=function(e,a){var t=geodash.api.getDashboardConfig(a);return geodash.api.hasLayer(e,t.featurelayers)},geodash.api.welcome=function(e){e=e||{};var a=e.$scope||e.scope||angular.element("#geodash-main").scope(),t={id:"geodash-modal-welcome",dynamic:{},"static":{welcome:a.map_config.welcome}};geodash.api.intend("toggleModal",t,a)},geodash.api.intend=function(e,a,t){t.$emit(e,a)},geodash.assert_float=function(e,a){return void 0===e||""===e?a:angular.isNumber(e)?e:parseFloat(e)},geodash.assert_array_length=function(e,a,t){return void 0===e||""===e?t:angular.isString(e)?(e=e.split(","),e.length==a?e:t):angular.isArray(e)?e.length==a?e:t:void 0},geodash.api.opt=function(e,a,t,n){if(void 0!=e){if($.isArray(a)){for(var i=void 0,o=0;o<a.length&&(i=e[a[o]],void 0==i);o++);return i||t||n}return e[a]||t||n}return t||n},geodash.api.opt_i=function(e,a,t){return geodash.api.opt(e,a,t,0)},geodash.api.opt_s=function(e,a,t){return geodash.api.opt(e,a,t,"")},geodash.api.opt_b=function(e,a,t){return geodash.api.opt(e,a,t,!1)},geodash.api.opt_j=function(e,a,t){return geodash.api.opt(e,a,t,{})},geodash.api.normalize_feature=function(e){var e={attributes:e.attributes||e.properties,geometry:e.geometry};return e},geodash.api.flatten=function(e,a){var t={};return $.each(e,function(e,n){var i=void 0!=a?a+"__"+e:e;void 0===n||null===n||angular.isString(n)||angular.isNumber(n)||"boolean"==typeof n?t[i]=n:angular.isArray(n)?$.each(geodash.api.flatten(n,i),function(e,a){t[""+e]=a}):$.each(geodash.api.flatten(n,i),function(e,a){t[e]=a})}),t},geodash.api.unpack=function(e){var a={};return $.each(e,function(t,n){if(-1==t.indexOf("__"))a[t]=n;else{for(var i=t.split("__"),o=e,l=0;l<i.length;l++){var r=i[l];r in o||(o[r]={}),o=o[r]}o[i[i.length-1]]=n}}),a},geodash.api.buildScope=function(e,a){var t=geodash.api.getScope("geodash-main"),n=(a.id_target||a.id_show||a.id,e.targetScope,{state:t.state,meta:geodash.meta});return angular.isDefined(a)&&("static"in a&&(n=$.extend(n,a["static"])),"dynamic"in a&&$.each(a.dynamic,function(a,i){if(angular.isString(i))"map_config"==i?n[a]=t.map_config:"state"==i&&(n[a]=t.state);else if(angular.isArray(i)){var o=i[0].toLowerCase();"source"==o?n[a]=extract(expand(i.slice(1)),e.targetScope):"baselayer"==o||"bl"==o?n[a]=geodash.api.getBaseLayer(i[1])||void 0:"featurelayer"==o||"fl"==o?n[a]=geodash.api.getFeatureLayer(i[1])||void 0:"map_config"==o?n[a]=extract(expand(i.slice(1)),t.map_config):"state"==o&&(n[a]=extract(expand(i.slice(1)),t.state))}else n[a]=i})),$.extend(!0,{},n)},geodash.api.updateValue=function(e,a,t){if(-1==e.indexOf("__"))t[e]=a[e];else{for(var n=e.split("__"),i=0;i<n.length-1;i++){var o=n[i];if(!(o in t)){var l=-1;try{l=parseInt(n[i+1],10)}catch(r){l=-1}t[o]=l>=0?[]:{}}t=t[o]}var d=n[n.length-1];if(angular.isArray(t)){if(d>=t.length){for(var s=d-t.length,c=0;s>c;c++)t.push({});t.push(a[e])}}else t[d]=a[e]}},geodash.listeners.saveAndHide=function(e,a){geodash.listeners.hideModal(e,a);var t=a.id_target||a.id,n=geodash.api.getScope(t),i=geodash.api.buildScope(e,a);n.$apply(function(){$.each(i,function(e,a){n[e]=a})})},geodash.listeners.switchModal=function(e,a){geodash.listeners.hideModal(e,a),geodash.listeners.showModal(e,a)},geodash.listeners.hideModal=function(e,a){var t=a.id_hide||a.id;try{$("#"+t).modal("hide");var n=geodash.api.getScope(t),i=a.clear;"clear"in a&&void 0!=a.clear&&n.$apply(function(){$.each(i,function(e,a){n[a]=void 0})})}catch(o){}},geodash.listeners.toggleModal=function(e,a){geodash.listeners.showModal(e,a)},geodash.listeners.showModal=function(e,a){console.log("event",e),console.log("args",a);var t=a.id_show||a.id,n=geodash.api.getScope(t),i=geodash.api.buildScope(e,a),o=a.modal||{};o.show=!1,n.$apply(function(){$.each(i,function(e,a){n[e]=a}),setTimeout(function(){var e=$("#"+t),a=n.tab;void 0!=a?(e.find(".nav-tabs li").each(function(){var e=$(this),t=e.find("a").attr("href").substring(1);a==t?e.addClass("active"):e.removeClass("active")}),e.find(".tab-pane").each(function(){var e=$(this);a==e.attr("id")?e.addClass("in active"):e.removeClass("in active")})):(e.find(".nav-tabs li").slice(0,1).addClass("active"),e.find(".nav-tabs li").slice(1).removeClass("active"),e.find(".tab-pane").slice(0,1).addClass("in active"),e.find(".tab-pane").slice(1).removeClass("in active")),$('[data-toggle="tooltip"]',e).tooltip(),geodash.init.typeahead(e),$("#"+t).modal(o),$("#"+t).modal("toggle")},0)})},geodash.ui.showOptions=function(e,a){try{var t=$(a);t.typeahead("open"),t.data("ttTypeahead").menu.update.apply(t.data("ttTypeahead").menu,[""]);var n=t.data("engine");n.search.apply(n,[""])}catch(i){}};var currentControllers=[];geodash.init_controller_base=function(e){e.controller("GeoDashControllerBase",geodash.controllers.controller_base)},geodash.init_controller=function(e,a,t){var n=e.data("controllerName")||e.attr("geodash-controller")||e.attr("name")||e.attr("id");void 0==n||null==n||""==n?(console.log("Error: Could not load controller for element, because name could not be resolved"),console.log(e,t)):(currentControllers.push({controllerName:n,controller:t||geodash.controllers.controller_base}),a.controller(n,t||geodash.controllers.controller_base))},geodash.init_controllers=function(e,a,t){for(var n=0;n<t.length;n++){var i=t[n];$(i.selector,e).each(function(){try{geodash.init_controller($(this),a,i.controller)}catch(e){console.log('Could not load GeoDash Controller "'+i.selector+'"',e)}})}},geodash.vecmath={},geodash.vecmath.distance=function(e,a){var t=L.Projection.SphericalMercator;if(void 0!=a.toString&&a.toString().startsWith("LatLng"))return t.project(e).distanceTo(t.project(a));var n=void 0;return $.each(a._layers,function(a,i){var o=i._latlngs,l=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(t.project(e),t.project(o[l]),t.project(o[l+1])),l++);l<o.length-1;l++){var r=L.LineUtil.pointToSegmentDistance(t.project(e),t.project(o[l]),t.project(o[l+1]));n>r&&(n=r)}}),n},geodash.vecmath.closestLocation=function(e,a){if(void 0!=a.toString&&a.toString().startsWith("LatLng"))return a;var t=L.Projection.SphericalMercator,n=void 0,i=void 0;return $.each(a._layers,function(a,o){var l=o._latlngs,r=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(t.project(e),t.project(l[r]),t.project(l[r+1])),i=L.LineUtil.closestPointOnSegment(t.project(e),t.project(l[r]),t.project(l[r+1])),r++);r<l.length-1;r++){var d=L.LineUtil.pointToSegmentDistance(t.project(e),t.project(l[r]),t.project(l[r+1]));n>d&&(n=d,i=L.LineUtil.closestPointOnSegment(t.project(e),t.project(l[r]),t.project(l[r+1])))}}),t.unproject(i)},geodash.vecmath.getClosestFeatureAndLocation=function(e,a){var t=void 0,n=0,i=void 0;if(void 0!=e&&e.length>0){t=e[0],n=geodash.vecmath.distance(a,e[0].geometry),i=geodash.vecmath.closestLocation(a,e[0].geometry);for(var o=1;o<e.length;o++){var l=e[o];geodash.vecmath.distance(a,l.geometry)<n&&(t=l,n=geodash.vecmath.distance(a,l.geometry),i=geodash.vecmath.closestLocation(a,l.geometry))}}return{feature:t,location:i}},geodash.init_state=function(e,a){var t=$.extend({},e),n=getHashValueAsFloat(["latitude","lat","y"])||e.lat||0,i=getHashValueAsFloat(["longitude","lon","long","lng","x"])||e.lon||0,o=getHashValueAsInteger(["zoom","z"])||e.z||3,l={lat:n,lon:i,z:o};return t.view=void 0!=t.view?$.extend(t.view,l):l,void 0!=t.filters&&$.each(t.filters,function(e,n){$.each(n,function(n,i){var o=a.filters[e][n].toLowerCase(),l=getHashValue(e+":"+n,o);void 0!=l&&""!=l&&(t.filters[e][n]=l)})}),void 0!=t.styles,t},geodash.ui_init_slider_label=function(e,a,t,n,i){if("ordinal"==t){var o={value:i};a.data("label").html(e(a.data("label-template"))(o))}else if("continuous"==t)if("boolean"==$.type(n)&&n||"true"==n.toLowerCase()){var o={values:[i[0],i[1]]};a.data("label").html(e(a.data("label-template"))(o))}else if("min"==n||"max"==n){var o={value:i};a.data("label").html(e(a.data("label-template"))(o))}},geodash.ui_init_slider_slider=function(e,a,t,n,i,o,l,r,d){"ordinal"==n?t.slider({range:"boolean"==$.type(i)&&i||"true"==i.toLowerCase()?!0:i,value:o,min:0,max:r,step:1,slide:function(n,i){geodash.ui_update_slider_label.apply(this,[e,n,i]);var o=t.data("output"),l=t.data("options")[i.value],r={};r[o]=l,geodash.api.intend("filterChanged",{layer:"popatrisk",filter:r},a)}}):"continuous"==n&&("boolean"==$.type(i)&&i||"true"==i.toLowerCase()?t.slider({range:!0,values:o,min:l,max:r,step:d,slide:function(n,i){geodash.ui_update_slider_label.apply(this,[e,n,i]);var o=t.data("output"),l=i.values,r={};r[o]=l,geodash.api.intend("filterChanged",{layer:"popatrisk",filter:r},a)}}):"min"!=i&&"max"!=i||t.slider({range:i,value:o,min:l,max:r,step:d,slide:function(n,i){geodash.ui_update_slider_label.apply(this,[e,n,i]);var o=t.data("output"),l=i.value/100,r={};r[o]=l,geodash.api.intend("filterChanged",{layer:"popatrisk",filter:r},a)}}))},geodash.ui_update_slider_label=function(e,a,t){var n=$(this),i=n.data("type"),o=n.data("range");if("ordinal"==i){var l={value:n.data("options")[t.value]};n.data("label").html(e(n.data("label-template"))(l))}else if("continuous"==i)if("boolean"==$.type(o)&&o||"true"==o.toLowerCase()){var l={values:[t.values[0],t.values[1]]};n.data("label").html(e(n.data("label-template"))(l))}else if("min"==o||"max"==o){var l={value:t.value/100};n.data("label").html(e(n.data("label-template"))(l))}};var getHashValue=function(e,a){var t=void 0;e="string"==typeof e?[e.toLowerCase()]:$.map(e,function(e,a){return e.toLowerCase()});for(var n=location.hash.toLowerCase(),i=0;i<e.length;i++){var o=e[i],l=n.match(new RegExp(o+"=([^&]*)"));if(l&&(t=l[1],void 0!=t&&null!=t&&""!=t))break}if(void 0!=a)if("integer"==a)t=void 0!=t&&null!=t&&""!=t?parseInt(t,10):void 0;else if("stringarray"==a){if(void 0!=t){var r=t.split(",");t=r}}else if("integerarray"==a){if(void 0!=t){for(var d=t.split(","),r=[],i=0;i<d.length;i++){var s=d[i];r.push(void 0!=s&&null!=s&&""!=s?parseInt(s,10):void 0)}t=r}}else if("float"==a)t=void 0!=t&&null!=t&&""!=t?parseFloat(t):void 0;else if("floatarray"==a&&void 0!=t){for(var d=t.split(","),r=[],i=0;i<d.length;i++){var s=d[i];r.push(void 0!=s&&null!=s&&""!=s?parseFloat(s):void 0)}t=r}return t},hasHashValue=function(e){var a=getHashValue(e);return void 0!=a&&null!=a&&""!=a},getHashValueAsStringArray=function(e){return getHashValue(e,"stringarray")},getHashValueAsInteger=function(e){return getHashValue(e,"integer")},getHashValueAsIntegerArray=function(e){return getHashValue(e,"integerarray")},getHashValueAsFloat=function(e){return getHashValue(e,"float")},sortLayers=function(e,a){var t=$.isArray(e)?e:$.map(e,function(e){return e});return t=t.sort(function(e,a){return e.options.renderOrder-a.options.renderOrder}),a===!0&&t.reverse(),t},updateRenderOrder=function(e){for(var a=0;a<e.length;a++)e[a].bringToFront()},layersAsArray=function(e){return $.map(e,function(e,a){return{id:a,layer:e}})},expand=function(e){var a=[];if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];angular.isString(n)&&-1!=n.indexOf(".")?a=a.concat(n.split(".")):a.push(n)}else angular.isString(e)&&(a=e.split("."));return a},extract=function(e,a,t){angular.isString(e)&&(e=e.split("."));var n=void 0;if(0==e.length)n=void 0!=a&&null!=a?a:t;else{var i=e.slice(1);0==i.length&&angular.isString(e[0])&&"length"==e[0].toLowerCase()&&(n=Array.isArray(a)?a.length:angular.isDefined(a)?a.length:0),void 0==n&&angular.isDefined(a)&&(n=Array.isArray(a)?extract(i,a[e[0]],t):extract(i,a[""+e[0]],t))}return n};geodash.codec={},geodash.codec.parseFeatures=function(e,a){var t=[];return $(e).find("gml\\:featuremember").each(function(){var e=$(this).children(),n=e.prop("tagName").toLowerCase(),i=geodash.codec.parseAttributes(e,a[n]),o=e.find("geonode\\:shape"),l=void 0;if(o.find("gml\\:point").length>0){var r=o.find("gml\\:point").find("gml\\:coordinates").text().split(",");l=new L.LatLng(parseFloat(r[1]),parseFloat(r[0]))}else if(o.find("gml\\:multilinestring").length>0){var r=o.find("gml\\:multilinestring").find("gml\\:linestringmember").find("gml\\:linestring").find("gml\\:coordinates").text().split(" ");r=$.map(r,function(e,a){var t=e.split(",");return[[parseFloat(t[0]),parseFloat(t[1])]]});var d=[{type:"LineString",coordinates:r}];l=new L.GeoJSON(d,{})}var s={featuretype:n,attributes:i,geometry:l};t.push(s)}),t},geodash.codec.parseAttributes=function(e,a){for(var t={},n=0;n<a.length;n++){var i=a[n],o=i.output||i.attribute;t[o]=void 0;var l=i.attribute||i.input,r=void 0!=l?[l]:i.inputs;if(void 0!=r)for(var d=0;d<r.length;d++){var l=r[d];if(e.find("geonode\\:"+l).length>0){t[o]=e.find("geonode\\:"+l).text();break}}}return t},geodash.popup={},geodash.popup.buildChart=function(e,a,t,n){var i="";return i+='<div style="text-align:center;"><b>'+e.label+"</b></div><br>",i+='<div id="'+e.id+'" class="geodash-popup-chart"></div>'},geodash.popup.buildField=function(e,a,t,n){var i=e.output||e.attribute,o=void 0,l=!1;if(void 0!=e.when&&"defined"==e.when.toLowerCase()?void 0!=t.attributes[i]&&(l=!0):l=!0,l)if("link"==e.type){var r=void 0!=e.value?e.value:"{{ feature.attributes."+i+" }}";o="<span><b>"+e.label+':</b> <a target="_blank" href="'+e.url+'">',o+=r,o+="</a></span>"}else{var r=void 0;if(void 0!=e.value)r=e.value;else{if("date"==e.type){var d=e.format||"medium";r="feature.attributes."+i+" | date:'"+d+"'"}else r="feature.attributes."+i;e.fallback&&(r="("+r+") || '"+e.fallback+"'"),r="{{ "+r+" }}"}o="<span><b>"+e.label+":</b> "+r+"</span>"}return o},geodash.popup.buildPopupTemplate=function(e,a,t,n){var i=e.panes,o="";angular.isDefined(e.title)&&(o+='<h5 style="word-wrap:break-word;text-align:center;">'+e.title+"</h5>");for(var l=[],r=0;r<i.length;r++){var d=i[r],s=[],c=[];if("fields"in d)for(var g=0;g<d.fields.length;g++){var p=geodash.popup.buildField(d.fields[g],a,t,n);void 0!=p&&s.push(p)}if("charts"in d)for(var g=0;g<d.charts.length;g++){var f=geodash.popup.buildChart(d.charts[g],a,t,n);void 0!=f&&c.push(f)}var h=s.join("<br>");c.length>0&&(h+="<hr>"+c.join("<br>")),l.push(h)}if(i.length>1){var u=[],d=i[0],m='<li class="active"><a data-toggle="tab" href="#'+d.id+'">'+d.tab.label+"</a></li>";u.push(m);for(var r=1;r<i.length;r++)d=i[r],m='<li><a data-toggle="tab" href="#'+d.id+'">'+d.tab.label+"</a></li>",u.push(m);var b='<ul class="nav nav-tabs nav-justified">'+u.join("")+"</ul>",v=[],y='<div id="'+i[0].id+'" class="tab-pane fade in active">'+l[0]+"</div>";v.push(y);for(var r=1;r<i.length;r++)y='<div id="'+i[r].id+'" class="tab-pane fade">'+l[r]+"</div>",v.push(y);o+=b+'<div class="tab-content">'+v.join("")+"</div>"}else o+=l[0];return o},geodash.popup.buildPopupContent=function(e,a,t,n){var i=geodash.popup.buildPopupTemplate(a.popup,a,t,n),o={layer:a,feature:t,state:n};return e(i)(o)},geodash.popup.openPopup=function(e,a,t,n,i,o){var l=geodash.popup.buildPopupContent(e,a,t,o),r=new L.Popup({maxWidth:a.popup.maxWidth||400},void 0);r.setLatLng(new L.LatLng(n.lat,n.lon)),r.setContent(l),i.openPopup(r)},geodash.tilemath={D2R:Math.PI/180,R2D:180/Math.PI},geodash.tilemath.point_to_bbox=function(e,a,t,n){var i=geodash.tilemath.point_to_radius(t),o=e+i;void 0!=n&&n>=0&&(o=o.toFixed(n));var l=e-i;void 0!=n&&n>=0&&(l=l.toFixed(n));var r=a-i;void 0!=n&&n>=0&&(r=r.toFixed(n));var d=a+i;return void 0!=n&&n>=0&&(d=d.toFixed(n)),[l,r,o,d]},geodash.tilemath.point_to_radius=function(e){return(geodash.config.click_radius||4)/e},geodash.tilemath.tms_to_bbox=function(e,a,t){var n=geodash.tilemath.tile_to_lon(e+1,t),i=geodash.tilemath.tile_to_lon(e,t),o=geodash.tilemath.tile_to_lat(a+1,t),l=geodash.tilemath.tile_to_lat(a,t);return[i,o,n,l]},geodash.tilemath.tile_to_lon=function(e,a){return e/Math.pow(2,a)*360-180},geodash.tilemath.tile_to_lat=function(e,a){return n=Math.pi-2*Math.PI*e/Math.pow(2,a),R2D*Math.atan(.5*(Math.exp(n)-Math.exp(-n)))},geodash.http={},geodash.http.build_promises=function(e,a){for(var t=[],n=0;n<a.length;n++){var i=a[n],o={},l=e.get(i,o);t.push(l)}return t},geodash.http.build_features=function(e,a){for(var t=[],n=0;n<e.length;n++){var i=e[n];if(200==i.status){var o=i.data;t=t.concat(geodash.codec.parseFeatures(o,a))}}return t},geodash.layers={},geodash.layers.aggregate_fields=function(e){for(var a=[],t=0;t<e.popup.panes.length;t++)a=a.concat(e.popup.panes[t].fields);return a},geodash.layers.init_baselayers=function(e,a){for(var t={},n=0;n<a.length;n++){var i=a[n];try{t[i.id]=L.tileLayer(i.source.url,{id:i.id,attribution:i.source.attribution})}catch(o){console.log("Could not add baselayer "+n)}}return t},geodash.layers.init_featurelayer_post=function(e,a,t,n,i){void 0!=n?((void 0!=i?i:!0)&&n.addTo(a.map),geodash.api.intend("layerLoaded",{type:"featurelayer",layer:t,visible:i},e)):console.log("Could not add featurelayer "+t+" because it is undefined.")},geodash.layers.init_featurelayer_wms=function(e,a,t,n,i){var o=i.wms,l=L.tileLayer.wms(o.url,{renderOrder:$.inArray(n,t.renderlayers),buffer:o.buffer||0,version:o.version||"1.1.1",layers:Array.isArray(o.layers)?o.layers.join(","):o.layers,styles:o.styles?o.styles.join(","):"",format:o.format||"image/png",transparent:angular.isDefined(o.transparent)?o.transparent:!0,attribution:i.source.attribution});a.featurelayers[n]=l,geodash.layers.init_featurelayer_post(e,a,n,l,i.visible)},geodash.layers.init_featurelayer_geojson=function(e,a,t,n,i){var o=extract("geojson.url",i)||extract("source.url",i)||extract("url",i);$.ajax({url:o,dataType:"json",success:function(t){var o=void 0;if("heatmap"==i.transform){for(var l=[],r=0,d=0;d<t[0].features.length;d++){var s="attribute"in i.heatmap&&""!=i.heatmap.attribute?t[0].features[d].properties[i.heatmap.attribute]:1;l.push([t[0].features[d].geometry.coordinates[1],t[0].features[d].geometry.coordinates[0],s]),s>r&&(r=s)}for(var d=0;d<l.length;d++)l[d][2]=l[d][2]/r;var c=L.heatCanvas();o=L.heatLayer(l,{renderer:c,attribution:i.source.attribution,radius:i.heatmap.radius||25,blur:i.heatmap.blur||15,max:i.heatmap.max||1,minOpacity:i.heatmap.minOpacity||.5})}else o=L.geoJson(t,{attribution:i.source.attribution});a.featurelayers[n]=o,geodash.layers.init_featurelayer_post(e,a,n,o,i.visible)}})},geodash.layers.init_featurelayer=function(e,a,t,n,i){void 0!=a.enabled&&1!=a.enabled||("geojson"==a.type.toLowerCase()?geodash.layers.init_featurelayer_geojson(t,n,i,e,a):"wms"==a.type.toLowerCase()&&geodash.layers.init_featurelayer_wms(t,n,i,e,a))},geodash.layers.init_featurelayers=function(e,a,t,n){$.each(e,function(e,i){geodash.layers.init_featurelayer(i.id,i,a,t,n)})};var geodashserver={};geodashserver.welcome=function(e){e=e||{};var a=e.$scope||e.scope||angular.element("#geodash-main").scope(),t={id:"geodashserver-modal-welcome",modal:{backdrop:"static",keyboard:!1},dynamic:{},"static":{welcome:a.map_config.welcome}};geodash.api.intend("toggleModal",t,a)},geodashserver.html5data=function(){var e=arguments,a=e[0].toLowerCase();if("switchmodal"==a){var t=e[1],n=e[2],i={id_hide:t,id_show:n};if("geodash-modal-edit-field"==n||"geodash-modal-edit-object"==n){var o=e[3],l=o.replace(".","__");if("geodash-modal-edit-field"==n)i.clear=["objectIndex"],i["static"]={field:o,field_flat:l},i.dynamic={value_edit_field:["source","map_config",o],map_config_schema:["source","map_config_schema"],map_config_schema_flat:["source","map_config_schema_flat"]};else if("geodash-modal-edit-object"==n){var r=e[4];i["static"]={prefix_field:o,prefix_field_flat:l},i.dynamic={modaleditobject_workspace:["source","modaleditfield_workspace"],modaleditobject_workspace_flat:["source","modaleditfield_workspace_flat"],object_schema:["source","map_config_schema",o,"schema"],map_config_schema:["source","map_config_schema"],map_config_schema_flat:["source","map_config_schema_flat"]},angular.isNumber(r)?(i["static"].objectIndex=r,i.dynamic.object=["source","modaleditfield_workspace",o,r]):(i.dynamic.objectIndex=["source","modaleditfield_workspace",o,"length"],i.dynamic.object=void 0)}}return i}if("togglemodal"==a||"showmodal"==a){var d=e[1];if("geodash-modal-edit-field"==d){var o=e[2],l=o.replace(".","__");return{id:d,"static":{field:o,field_flat:l},dynamic:{value_edit_field:["source","map_config",o],modaleditfield_workspace:["source","map_config"],modaleditfield_workspace_flat:["source","map_config_flat"],map_config_schema:["source","map_config_schema"],map_config_schema_flat:["source","map_config_schema_flat"]}}}if("geodash-modal-edit-object"==d){var o=e[2],l=o.replace(".","__"),s=e[3];return{id:d,dynamic:{object:["source","map_config_flat",l,s],object_schema:["source","map_config_schema",o,"schema"]}}}return""}if("hidemodal"==a){var d=e[1];return{id:d}}if("saveandhide"==a){var d=e[1],t=e[1],c=e[2],g=e[3],i={id_hide:t,id_target:c};return i.clear=["field","field_flat"],i.dynamic={},angular.isDefined(g)&&$.each(g,function(e,a){i.dynamic[e]=["source",a]}),i}if("saveobjectandswitch"==a){var d=e[1],t=e[1],n=e[2],p=e[3],f=e[4],g=e[5],i={id_hide:t,id_show:n,"static":{field:p,field_flat:f},dynamic:{value_edit_field:["source","modaleditobject_workspace",p]}};return angular.isDefined(g)&&$.each(g,function(e,a){i.dynamic[e]=["source",a]}),i}return""},geodash.config={click_radius:2},geodash.init_dashboard=function(e,a){geodash.app=app=angular.module(e,["ngRoute","ngSanitize","ngCookies"]),geodash.init.templates(app),geodash.init.filters(app),geodash.init.directives(app),app.factory("state",function(){return $.extend({},geodash.initial_state)}),app.factory("stateschema",function(){return $.extend({},geodash.state_schema)}),app.factory("map_config",function(){return $.extend({},geodash.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{}}}),geodash.init.listeners(),geodash.init_controller_base(app),init_geodashserver_controller_main(a,app),angular.bootstrap(document,[e])},geodash.meta={},geodash.meta.projects=[{name:"geodash",version:"0.0.1",description:"geodash 0.0.1"},{name:"geodashserver",version:"0.0.1",description:"GeoDash Server 1.x"}],geodash.meta.plugins=[{controllers:["controller_base.js"],directives:["svg.js","onLinkDone.js","onRepeatDone.js","geodashModalDashboardConfig.js","tab.js","geodashBtnClose.js","geodashBtnInfo.js","geodashBtnClear.js"],enumerations:["dates.js"],templates:["geodash_modal_dashboard_config.tpl.html","geodash_tab.tpl.html","geodash_btn_close.tpl.html","geodash_btn_info.tpl.html","geodash_btn_clear.tpl.html"],filters:["default.js","md2html.js","percent.js","tabLabel.js","as_float.js","add.js","title.js","as_array.js","sortItemsByArray.js","breakpoint.js","breakpoints.js","position_x.js","width_x.js","length.js","layer_is_visible.js","common/append.js","common/default_if_undefined.js","common/default_if_undefined_or_blank.js","common/extract.js","common/inArray.js","common/not.js","common/prepend.js","common/ternary.js","common/ternary_defined.js","common/yaml.js","array/join.js","array/first.js","array/last.js","array/choose.js","format/formatBreakPoint.js","format/formatFloat.js","format/formatInteger.js","format/formatArray.js","format/formatMonth.js m","math/eq.js","math/lte.js","math/gte.js","math/gt.js","string/replace.js","string/split.js","url/url_shapefile.js","url/url_geojson.js","url/url_kml.js","url/url_describefeaturetype.js"],schemas:["base.yml","baselayers.yml","featurelayers.yml","controls.yml","view.yml","pages.yml"],project:"geodash",id:"base"},{controllers:["controller_legend.js"],directives:["geodashModalLayerCarto.js","geodashModalLayerMore.js","geodashModalLayerConfig.js","geodashSymbolCircle.js","geodashSymbolEllipse.js","geodashSymbolGraduated.js","geodashSymbolGraphic.js","geodashLegendBaselayers.js","geodashLegendFeaturelayers.js"],templates:["modal/geodash_modal_layer_carto.tpl.html","modal/geodash_modal_layer_more.tpl.html","modal/geodash_modal_layer_config.tpl.html","symbol/symbol_circle.tpl.html","symbol/symbol_ellipse.tpl.html","symbol/symbol_graduated.tpl.html","symbol/symbol_graphic.tpl.html","legend_baselayers.tpl.html","legend_featurelayers.tpl.html"],less:["legend.less"],schemas:["legend_schema.yml"],project:"geodash",id:"legend"},{controllers:[],directives:["geodashModalWelcome.js"],templates:["modal/geodash_modal_welcome.tpl.html"],project:"geodash",id:"welcome"},{controllers:[],directives:["geodashModalAbout.js"],templates:["geodash_modal_about.tpl.html"],project:"geodash",id:"about"},{controllers:[],directives:["geodashModalDownload.js"],templates:["geodash_modal_download.tpl.html"],project:"geodash",id:"download"},{controllers:[],directives:["geodashMapOverlays.js"],templates:["map_overlays.tpl.html"],less:["map_overlays.less"],schemas:["map_overlays_schema.yml"],project:"geodash",id:"overlays"},{controllers:["controller_map_map.js"],directives:[],templates:[],less:["main_map.less"],project:"geodashserver",id:"map_map"},{controllers:[],directives:["geodashserverModalWelcome.js"],templates:["modal_welcome_geodashserver.tpl.html"],less:["geodashserver_welcome.less"],project:"geodashserver",id:"geodashserver_welcome"},{controllers:["controller_sidebar_geodashserver.js","controller_modal_edit_field.js","controller_modal_edit_object.js"],directives:["geodashDashboardEditor.js","geodashModalEditField.js","geodashModalEditObject.js"],templates:["dashboard_editor.tpl.html","modal_edit_field.tpl.html","modal_edit_object.tpl.html"],less:["sidebar.less","sidebar-toggle.less"],project:"geodashserver",id:"geodashserver_sidebar"},{controllers:["controller_main.js"],directives:[],templates:[],project:"geodashserver",id:"main"}],geodash.templates={},geodash.templates["geodash_modal_dashboard_config.tpl.html"]='<div class="modal-dialog geodash-responsive" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">Configuration / {{ workspace.config.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li label="Projects" target="#modal-dashboard-config-projects" active="true" geodash-tab></li>\n          <li label="Plugins" target="#modal-dashboard-config-plugins" geodash-tab></li>\n          <li label="Directives" target="#modal-dashboard-config-directives" geodash-tab></li>\n          <li label="Templates" target="#modal-dashboard-config-templates" geodash-tab></li>\n          <li label="Filters" target="#modal-dashboard-config-filters" geodash-tab></li>\n          <li label="YAML" target="#modal-dashboard-config-yaml" geodash-tab></li>\n          <li label="JSON" target="#modal-dashboard-config-json" geodash-tab></li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-dashboard-config-projects"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Projects</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Version</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="project in meta.projects track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="project.name"></td>\n                  <td ng-bind-html="project.version"></td>\n                  <td ng-bind-html="project.description"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-plugins"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Plugins</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Project</th>\n                  <th>Name</th>\n                  <th>Version</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="plugin in meta.plugins track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="plugin.project"></td>\n                  <td ng-bind-html="plugin.id"></td>\n                  <td ng-bind-html="plugin.version"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-directives"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Directives</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="directive in meta.directives track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="directive"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-templates"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Templates</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="template in meta.templates track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="template"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-filters"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Filters</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="filter in meta.filters track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="filter"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-yaml"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Dashboard Configuration as YAML</h3>\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ workspace.config | yaml : 8 }}</pre>\n          </div>\n          <div\n            id="modal-dashboard-config-json"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Dashboard Configuration as JSON</h3>\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ workspace.config | json }}</pre>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',
geodash.templates["geodash_tab.tpl.html"]='<li\n  role="presentation"\n  ng-class="(active && active != \'false\') ? \'active\' : \'\'">\n  <a\n    href="#{{ target }}"\n    aria-controls="{{ target }}"\n    role="tab"\n    data-toggle="tab"\n    style="padding-left:8px; padding-right: 8px; height: {{ height | default_if_undefined : \'auto\'}}">{{ label }}</a>\n</li>\n',geodash.templates["geodash_btn_close.tpl.html"]='<button\n  type="button"\n  class="close"\n  data-dismiss="{{ dismiss | default_if_undefined: \'modal\' }}"\n  aria-hidden="true"><i class="fa fa-times"></i></button>\n',geodash.templates["geodash_btn_info.tpl.html"]='<div\n  class="input-group-addon btn btn-primary"\n  data-toggle="tooltip"\n  data-placement="{{ placement | default_if_undefined : \'left\' }}"\n  ng-attr-title="{{ info }}">\n  <i class="fa fa-info-circle"></i>\n</div>\n',geodash.templates["geodash_btn_clear.tpl.html"]='<div\n  class="input-group-addon btn btn-danger btn-clear"\n  data-clear="{{ target }}">\n  <i class="fa fa-times"></i>\n</div>\n',geodash.templates["geodash_modal_layer_carto.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }} / Cartography</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <p class="navbar-text" style="margin-bottom:0px;"><b>Select</b><br><b>a Style:</b></p>\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="style in layer.cartography track by $index">\n            <a\n              class="geodash-intent"\n              href="#modal-layer-carto-style-{{ style.id }}"\n              aria-controls="modal-layer-carto-style-{{ style.id }}"\n              data-intent-name="selectStyle"\n              data-intent-data="{&quot;layer&quot;:&quot;{{ layerID }}&quot;,&quot;style&quot;:&quot;{{ style.id }}&quot;}"\n              data-intent-ctrl="geodash-map-legend"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="style.title | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="style in layer.cartography track by $index"\n            id="modal-layer-carto-style-{{ style.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Attribute: </b><span>{{ style.attribute | default:"Not styled by attribute" }}</span></span><br>\n            <span><b>Mask: </b><span ng-bind-html="style.mask | md2html | default:\'No Mask\'"></span></span><br>\n            <span><b>Description: </b><span ng-bind-html="style.description | md2html | default:\'Not specified\'"></span></span>\n            <br>\n            <br>\n            <div\n              ng-if="style.type == \'graduated\'"\n              geodash-symbol-graduated\n              style="style"\n              container-width="{{ \'392px\' }}">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'circle\'"\n              geodash-symbol-circle\n              style="style">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'graphic\'"\n              geodash-symbol-graphic\n              style="style">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_modal_layer_more.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-layer-more-general"\n              aria-controls="modal-layer-more-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-attributes"\n              aria-controls="modal-layer-more-attributes"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Attributes</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-source"\n              aria-controls="modal-layer-more-source"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Source</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wms"\n              aria-controls="modal-layer-more-wms"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WMS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wfs"\n              aria-controls="modal-layer-more-wfs"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WFS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-download"\n              aria-controls="modal-layer-more-download"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Download</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-layer-more-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="layer.description | md2html | default:\'No description given.\'"></span>\n            <br><br><b>Type:</b> {{ layer.type }}\n            <br><br><b>Source:</b> {{ layer.source.name | default:"Not specified" }}\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-attributes"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <div>\n              Placeholder\n            </div>\n          </div>\n          <div\n            ng-if="layer.source"\n            id="modal-layer-more-source"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Name:</b> {{ layer.source.name | default:"Not specified" }}</span><br>\n            <span><b>Attribution:</b> {{ layer.source.attribution | default:"Not specified" }}</span><br>\n            <span><b>URL:</b> {{ layer.source.url | default:"Not specified" }}</span><br>\n          </div>\n          <div\n            ng-if="layer.wms"\n            id="modal-layer-more-wms"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wms.url | default:"Not specified" }}</span><br>\n            <span><b>Layers:</b> {{ layer.wms.layers|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Styles:</b> {{ layer.wms.styles|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Format:</b> {{ layer.wms.format | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wms.version | default:"Not specified" }}</span><br>\n            <span><b>Transparent:</b> {{ layer.wms.transparent | default:"No" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetCapabilities">Capabilities</a><br>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetLegendGraphic&format=image/png&layer={{ layer.wms.layers|first }}">Legend Graphic</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-wfs"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wfs.url | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wfs.version | default:"Not specified" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer | url_describefeaturetype }}">Describe Feature Type</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-download"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Download Shapefile</b>: <a target="_blank" href="{{ layer | url_shapefile }}">All</a>, <a target="_blank" href="{{ layer | url_shapefile:state }}">Current Extent</a><br>\n            <span><b>Download GeoJSON</b>: <a target="_blank" href="{{ layer | url_geojson }}">All</a>, <a target="_blank" href="{{ layer | url_geojson:state }}">Current Extent</a><br>\n            <span><b>Download Google Earth KML</b>: <a target="_blank" href="{{ layer | url_kml }}">All</a>, <a target="_blank" href="{{ layer | url_kml:state }}">Current Extent</a><br>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_modal_layer_config.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li class="active" role="presentation">\n            <a href="#modal-layer-config-input"\n              aria-controls="modal-layer-config-input"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Configure</a>\n          </li>\n          <li class="" role="presentation">\n            <a href="#modal-layer-config-output"\n              aria-controls="modal-layer-config-output"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Output</a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            id="modal-layer-config-input"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Title</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Title</label>\n                <input\n                  id="layer-config-title"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geodash-field-type="text"\n                  ng-model="layer.title"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.title }}">\n              </div>\n            </div>\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Description</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Description</label>\n                <input\n                  id="layer-config-description"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geodash-field-type="text"\n                  ng-model="layer.description"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.Description }}">\n              </div>\n            </div>\n          </div>\n          <div\n            id="modal-layer-config-output"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            {{ layer | json }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["symbol_circle.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <circle\n      cx="50%"\n      cy="50%"\n      ng-r="{{ style.legend.symbol.radius }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geodash.templates["symbol_ellipse.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <ellipse\n      cx="50%"\n      cy="50%"\n      ng-rx="{{ style.legend.symbol.width }}"\n      ng-ry="{{ style.legend.symbol.height }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geodash.templates["symbol_graduated.tpl.html"]='<div>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.ramp.label.left | md2html"></div>\n  <svg\n    ng-attr-width="{{ containerWidth }}"\n    height="90px"\n    version="1.0"\n    xmlns="http://www.w3.org/2000/svg">\n    <g>\n      <rect\n        ng-repeat="color in style.colors.ramp track by $index"\n        ng-attr-x="{{ style.colors.ramp | length | position_x : $index : containerWidth : 26 }}px"\n        ng-attr-y="{{ \'0\' }}"\n        ng-attr-width="{{ style.colors.ramp | length | width_x : containerWidth : 26 }}px"\n        height="50px"\n        ng-attr-fill="{{ color }}"\n        stroke-width="1"\n        stroke="#000000"/>\n    </g>\n    <g>\n      <text\n        ng-repeat="breakpoint in style | breakpoints track by $index"\n        ng-attr-x="{{ style | breakpoints | length | add: -1 | position_x : $index : containerWidth : 26 }}px"\n        ng-attr-y="{{ $index | choose : 68 : 82 }}px"\n        text-anchor="middle"\n        ng-attr-fill="{{ \'black\' }}"\n        font-size="14px"\n        text-decoration="underline"\n        font-family="\'Open Sans\', sans-serif">{{ style | breakpoint: $index | formatBreakpoint }}</text>\n    </g>\n  </svg>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.ramp.label.right | md2html"></div>\n</div>\n',geodash.templates["symbol_graphic.tpl.html"]='<i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n',geodash.templates["legend_baselayers.tpl.html"]='<div class="geodash-map-legend-baselayers geodash-radio-group">\n  <div\n    ng-repeat="layer in baselayers track by $index"\n    ng-init="layerIndex = $index"\n    ng-if="layer.legend!==undefined"\n    class="geodash-map-legend-item noselect"\n    data-layer="{{ layer.id }}">\n    <div class="geodash-map-legend-item-left">\n      <div class="geodash-map-legend-item-icon geodash-map-legend-item-more">\n        <a\n          class="geodash-intent"\n          data-intent-ctrl="geodash-map-legend"\n          data-intent-name="toggleModal"\n          data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-more\', \'baselayer\', layer) }}">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geodash-map-legend-item-icon geodash-map-legend-item-visibility">\n           <a\n             ng-class=" layer.id == state.view.baselayer ? \'geodash-map-legend-item-visibility-button geodash-intent geodash-radio geodash-on\' : \'geodash-map-legend-item-visibility-button geodash-intent geodash-radio\'"\n             data-intent-name="switchBaseLayer"\n             data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n             data-intent-class-on="geodash-on"\n             data-intent-class-off=""\n             data-intent-ctrl="geodash-map-legend">\n             <i class="fa fa-eye geodash-on"></i><i class="fa fa-eye-slash geodash-off"></i>\n           </a>\n         </div><!--\n      --><div class="geodash-map-legend-item-symbol" style="width: 10px;"></div>\n    </div><!--\n    --><div class="geodash-map-legend-item-right">\n      <div\n        class="geodash-map-legend-item-label"\n        style="{{ layer.id == state.view.baselayer ? \'width: 100%;\' : \'width: 100%;opacity: 0.4;\' }}">\n        <span ng-bind-html="layer.legend.label | default_if_undefined_or_blank : layer.title | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',geodash.templates["legend_featurelayers.tpl.html"]='<div class="geodash-map-legend-featurelayers">\n  <div\n    ng-repeat="layer in featurelayers track by $index"\n    ng-init="layerIndex = $index"\n    ng-if="layer.legend!==undefined"\n    class="geodash-map-legend-item noselect"\n    data-layer="{{ layer.id }}">\n    <div class="geodash-map-legend-item-left">\n      <div class="geodash-map-legend-item-icon geodash-map-legend-item-config" style="display:none;">\n        <a\n          class="geodash-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-config\', \'featurelayer\', layer) }}"\n          data-intent-ctrl="geodash-map-legend">\n          <i class="fa fa-cog"></i>\n        </a>\n      </div><!--\n      --><div class="geodash-map-legend-item-icon geodash-map-legend-item-more">\n        <a\n          class="geodash-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-more\', \'featurelayer\', layer) }}"\n          data-intent-ctrl="geodash-map-legend">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geodash-map-legend-item-icon geodash-map-legend-item-visibility">\n         <a\n           ng-class="layer.id | inArray : state.view.featurelayers | ternary : \'geodash-map-legend-item-visibility-button geodash-intent geodash-toggle\' : \'geodash-map-legend-item-visibility-button geodash-intent geodash-toggle geodash-off\'"\n           data-intent-names="[&quot;showLayer&quot;,&quot;hideLayer&quot;]"\n           data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n           data-intent-ctrl="geodash-map-legend">\n           <i class="fa fa-eye geodash-on"></i><i class="fa fa-eye-slash geodash-off"></i>\n         </a>\n     </div><!--\n     --><div\n          ng-class="layer.type == \'geojson\' ? \'geodash-map-legend-item-icon geodash-map-legend-item-zoomto\': \'geodash-map-legend-item-icon geodash-map-legend-item-zoomto fade disabled\'">\n        <a\n          class="geodash-map-legend-item-zoomto-button geodash-intent"\n          data-intent-name="zoomToLayer"\n          data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n          data-intent-ctrl="geodash-map-legend">\n          <i class="fa fa-compress"></i>\n        </a>\n      </div>\n    </div><!--\n    --><div class="geodash-map-legend-item-right">\n      <div\n        ng-if="layer.cartography[0].legend.symbol"\n        class="geodash-map-legend-item-symbol">\n        <a\n          class="geodash-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-carto\', \'featurelayer\', layer) }}"\n          data-intent-ctrl="geodash-map-legend">\n          <div ng-if="layer.cartography[0].legend.symbol.type == \'circle\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <circle\n                cx="50%"\n                cy="50%"\n                ng-r="{{ layer.cartography[0].legend.symbol.radius }}"\n                ng-fill="{{ layer.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div ng-if="layer.cartography[0].legend.symbol.type == \'ellipse\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <ellipse\n                cx="50%"\n                cy="50%"\n                ng-rx="{{ layer.cartography[0].legend.symbol.width }}"\n                ng-ry="{{ layer.cartography[0].legend.symbol.height }}"\n                ng-fill="{{ layer.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.cartography[0].legend.symbol.type == \'graduated\'">\n            <svg\n              ng-attr-width="{{ layer.cartography[0].legend.symbol.width }}"\n              height="100%"\n              version="1.0"\n              xmlns="http://www.w3.org/2000/svg">\n              <rect\n                ng-repeat="color in layer.cartography[0].colors.ramp track by $index"\n                ng-attr-x="{{ $index|percent:layer.cartography[0].colors.ramp.length }}%"\n                y="0"\n                ng-attr-width="{{ 1|percent:layer.cartography[0].colors.ramp.length }}%"\n                ng-attr-height="{{ layer.cartography[0].legend.symbol.height }}"\n                ng-attr-fill="{{ color }}"\n                stroke-width="1"\n                stroke="#000000"/>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.cartography[0].legend.symbol.type == \'graphic\'">\n            <i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n          </div>\n        </a>\n      </div><!--\n      --><div\n           class="geodash-map-legend-item-label"\n           style="{{ layer.id | inArray : state.view.featurelayers | ternary : \'\' : \'opacity: 0.4;\' }}">\n        <span ng-bind-html="layer.legend.label | default_if_undefined_or_blank : layer.title | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_modal_welcome.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">{{ welcome.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-welcome-general"\n              aria-controls="modal-welcome-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-welcome-about"\n              aria-controls="modal-welcome-about"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">About</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-welcome-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.general | md2html | default:\'No body given.\'"></span>\n          </div>\n          <div\n            id="modal-welcome-about"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.about | md2html | default:\'No body given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_modal_about.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">{{ about.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="pane in about.panes track by $index">\n            <a\n              href="#{{ pane.id }}"\n              aria-controls="{{ pane.id }}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="pane.tab.label | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="pane in about.panes track by $index"\n            id="{{ pane.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="pane.content | md2html | default:\'No content given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_modal_download.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">{{ download.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="pane in download.panes track by $index">\n            <a\n              href="#{{ pane.id }}"\n              aria-controls="{{ pane.id }}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="pane.tab.label | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="pane in download.panes track by $index"\n            id="{{ pane.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="pane.content | md2html | default:\'No content given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["map_overlays.tpl.html"]='<div class="geodash-map-overlays">\n  <div ng-repeat="overlay in map_config.overlays track by $index">\n    <div\n      ng-if="overlay.type == \'text\'"\n      data-overlay-index="{{ $index }}"\n      data-overlay-type="text"\n      class="geodash-map-overlay"\n      height="{{ overlay.height | default_if_undefined : initial }}"\n      width="{{ overlay.width | default_if_undefined : initial }}"\n      style="{{ style(overlay.type, overlay) }}"\n      ng-bind-html="overlay.text.content | md2html"\n      on-link-done="overlayLoaded">\n    </div>\n    <div\n      ng-if="overlay.type == \'image\'"\n      data-overlay-index="{{ $index }}"\n      data-overlay-type="image"\n      class="geodash-map-overlay"\n      style="display: inline-block; {{ style(overlay.type, overlay) }}"\n      on-link-done="overlayLoaded">\n      <img\n        ng-src="{{ overlay.image.url }}"\n        width="{{ overlay.width }}"\n        height="{{ overlay.height }}">\n    </div>\n  </div>\n</div>\n',geodash.templates["modal_welcome_geodashserver.tpl.html"]='<div class="modal-dialog" data-backdrop="static" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <h4 class="modal-title" id="myModalLabel">{{ welcome.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-welcome-intro"\n              aria-controls="modal-welcome-intro"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Introduction</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-welcome-about"\n              aria-controls="modal-welcome-about"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">About</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-welcome-intro"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span\n              class="welcome-body"\n              ng-bind-html="welcome.intro | md2html | default:\'No body given.\'"></span>\n            <hr>\n            <h3 class="welcome-body">Get Started: Select a dashboard!</h3>\n            <div class="input-group select2-bootstrap-prepend select2-bootstrap-append">\n              <input\n                id="dashboard-input-backend"\n                name="dashboard-input-backend"\n                type="text"\n                class="form-control"\n                style="display:none;"\n                ng-model="dashboard">\n              <span class="input-group-addon" id="dashboard-addon">Dashboard</span>\n              <input\n                id="dashboard-input"\n                name="dashboard-input"\n                type="text"\n                class="typeahead form-control"\n                style="width:320px; height: auto;"\n                placeholder="dashboard (e.g., Test, etc.)"\n                aria-describedby="dashboard-addon"\n                data-placeholder="dashboard (e.g., Test, etc.)"\n                data-initial-data="dashboards_typeahead"\n                data-backend="dashboard-input-backend"\n                data-template-empty="<div class=&quot;alert alert-danger empty-message&quot;>Unable to find dashboard</div>">\n              <div\n                class="input-group-addon btn btn-primary btn-show-options"\n                data-toggle="tooltip"\n                data-placement="bottom"\n                title="Show Options."\n                ng-click="showOptions($event, \'#dashboard-input\')">\n                <i class="fa fa-chevron-down"></i>\n              </div>\n              <div\n                class="input-group-addon btn btn-danger btn-clear"\n                data-toggle="tooltip"\n                data-placement="bottom"\n                title="Clear dashboard selection."\n                data-clear="#dashboard-input">\n                <i class="fa fa-times"></i>\n              </div>\n            </div>\n            <hr>\n            <ul class="nav nav-justified welcome-go">\n              <li>\n                <a\n                  ng-disabled="dashboard == undefined || dashboard == \'\'"\n                  ng-class="dashboard == undefined || dashboard == \'\'  ? \'btn btn-default\' : \'btn btn-primary\' "\n                  ng-href="{{ dashboard == undefined || dashboard == \'\' ? \'#\' : \'/dashboard/\'+dashboard }}">Go!</a>\n              </li>\n            </ul>\n          </div>\n          <div\n            id="modal-welcome-about"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.about | md2html | default:\'No body given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',
geodash.templates["dashboard_editor.tpl.html"]='<div class="geodash-dashboard-editor">\n  <h3 style="word-wrap:break-word;text-align:center;">Editor</h3>\n  <hr>\n  <form novalidate class="form-horizontal simple-form">\n    <ul class="nav nav-tabs nav-justified" role="tablist">\n      <li\n        ng-repeat="pane in editor.panes track by $index"\n        ng-init="paneIndex = $index"\n        role="presentation"\n        ng-class="$first ? \'active\' : \'\'">\n        <a\n          href="#{{ pane.id }}"\n          aria-controls="{{ pane.id }}"\n          role="tab"\n          data-toggle="tab"\n          style="padding-left:8px; padding-right: 8px; height: 62px;"\n          ng-bind-html=" pane.label | md2html"></a>\n      </li>\n    </ul>\n    <div class="tab-content">\n      <div\n        ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n        ng-repeat="pane in fields_by_pane track by $index"\n        ng-init="paneIndex = $index"\n        id="{{ pane.id }}"\n        role="tabpanel"\n        style="padding: 10px;">\n        <div\n          ng-repeat="field in pane.fields track by $index"\n          ng-init="field_flat = (field | replace : \'.\' : \'__\')"\n          ng-init="fieldIndex = $index"\n          class="form-group"\n          style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n          <div\n              ng-if="schema | extract : field : \'type\' | inArray: [\'text\', \'string\', \'markdown\', \'md\']">\n            <label\n              for="editor-field-{{ field_flat }}"\n              class="col-sm-3 control-label"\n              ng-bind-html="schema | extract : field : \'label\'"></label>\n            <div class="col-sm-9">\n              <div\n                ng-if="schema | extract : field : \'multiline\' | default_if_undefined: \'false\' | inArray: [false, \'false\', \'no\', 0]"\n                class="input-group">\n                <div geodash-btn-info info="{{ schema | extract : field : \'description\' }}"></div>\n                <input\n                  id="editor-field-{{ field_flat }}"\n                  name="editor-field-{{ field_flat }}"\n                  type="text"\n                  class="form-control"\n                  placeholder="{{ schema | extract : field : \'placeholder\' }}"\n                  data-geodash-field-type="{{ schema | extract : field : \'type\' }}"\n                  ng-required="schema | extract : field : \'required\'"\n                  ng-value="workspace_flat | extract : field_flat"\n                  ng-model="workspace_flat[field_flat]"\n                  ng-change="validateField(field_flat)">\n                <a\n                  class="geodash-intent input-group-addon btn btn-primary btn-edit"\n                  href="#"\n                  data-intent-name="showModal"\n                  data-intent-data="{{ html5data(\'showModal\', \'geodash-modal-edit-field\', field) }}"\n                  data-intent-ctrl="{{ config.that.id }}">\n                  <i class="fa fa-pencil-square-o "></i>\n                </a>\n                <div geodash-btn-clear target="#editor-field-{{ field_flat }}"></div>\n              </div>\n              <div\n                ng-if="schema | extract : field : \'multiline\' | default_if_undefined: \'false\' | inArray: [true, \'true\', \'yes\', 1]"\n                class="input-group">\n                <div geodash-btn-info info="{{ schema | extract : field : \'description\' }}"></div>\n                <textarea\n                  id="editor-field-{{ field_flat }}"\n                  name="editor-field-{{ field_flat }}"\n                  class="form-control"\n                  placeholder="{{ schema | extract : field : \'placeholder\' }}"\n                  rows="3"\n                  data-geodash-field-type="{{ schema | extract : field : \'type\' }}"\n                  ng-required="schema | extract : field : \'required\'"\n                  style="max-width: 100%;"\n                  ng-model="workspace_flat[field_flat]"\n                  ng-change="validateField(field_flat)"\n                  ng-bind-html="workspace_flat | extract : field_flat"></textarea>\n                <a\n                  class="geodash-intent input-group-addon btn btn-primary btn-edit"\n                  href="#"\n                  data-intent-name="showModal"\n                  data-intent-data="{{ html5data(\'showModal\', \'geodash-modal-edit-field\', field) }}"\n                  data-intent-ctrl="{{ config.that.id }}">\n                  <i class="fa fa-pencil-square-o "></i>\n                </a>\n                <div geodash-btn-clear target="#editor-field-{{ field_flat }}"></div>\n              </div>\n            </div>\n            <div ng-show="form.$submitted || form.{{ field }}.$touched">\n              <span ng-show="form.{{ field }}.$error.required">{{ schema | extract : field : \'label\' }} is required.</span>\n            </div>\n          </div>\n          <div\n            ng-if="schema | extract : field : \'type\' | inArray: [\'int\', \'integer\']">\n            <label\n              for="editor-field-{{ field_flat }}"\n              class="col-sm-3 control-label"\n              ng-bind-html="schema | extract : field : \'label\'"></label>\n            <div class="col-sm-9 input-group">\n              <div geodash-btn-info info="{{ schema | extract : field : \'description\' }}"></div>\n              <input\n                id="editor-field-{{ field_flat }}"\n                name="editor-field-{{ field_flat }}"\n                type="number"\n                class="form-control"\n                placeholder="{{ schema | extract : field : \'placeholder\' }}"\n                data-geodash-field-type="{{ schema | extract : field : \'type\' }}"\n                ng-required="schema | extract : field : \'required\'"\n                ng-attr-min="{{ schema | extract : field : \'minValue\' | default_if_undefined: \'\' }}"\n                ng-attr-max="{{ schema | extract : field : \'maxValue\' | default_if_undefined: \'\' }}"\n                ng-value="workspace_flat | extract : field_flat"\n                ng-model="workspace_flat[field_flat]"\n                ng-change="validateField(field_flat)">\n              <div geodash-btn-clear target="#editor-field-{{ field_flat }}"></div>\n            </div>\n            <div ng-show="form.$submitted || form.{{ field }}.$touched">\n              <span ng-show="form.{{ field }}.$error.required">{{ schema | extract : field : \'label\' }} is required.</span>\n            </div>\n          </div>\n          <div\n            ng-if="schema | extract : field : \'type\' | inArray: [\'boolean\', \'checkbox\']"\n            class="col-sm-offset-2 col-sm-10">\n            <div class="checkbox">\n              <label>\n                <input\n                  type="checkbox"\n                  ng-checked="workspace_flat | extract : field_flat"\n                  ng-model="workspace_flat[field_flat]"\n                  ng-change="validateField(field_flat)"> {{ schema | extract : field : \'label\' }}\n              </label>\n            </div>\n          </div>\n          <div\n            ng-if="schema | extract : field : \'type\' | inArray: [\'stringarray\', \'textarray\']">\n            <label\n              for="editor-field-{{ field_flat }}"\n              class="col-sm-3 control-label"\n              ng-bind-html="schema | extract : field : \'label\'"></label>\n            <div class="col-sm-9">\n              <div class="input-group">\n                <div geodash-btn-info info="{{ schema | extract : field : \'description\' }}"></div>\n                <pre class="form-control" style="height: auto;max-height: 100px;">\n                  <span\n                    ng-repeat="x in workspace | extract : field track by $index"\n                    class="input-group"\n                    ng-bind-html="x">\n                  </span>\n                </pre>\n                <a\n                  class="geodash-intent input-group-addon btn btn-primary btn-edit"\n                  href="#"\n                  data-intent-name="showModal"\n                  data-intent-data="{{ html5data(\'showModal\', \'geodash-modal-edit-field\', field) }}"\n                  data-intent-ctrl="{{ config.that.id }}">\n                  <i class="fa fa-pencil-square-o "></i>\n                </a>\n                <div geodash-btn-clear target="#editor-field-{{ field_flat }}"></div>\n              </div>\n            </div>\n          </div>\n          <div\n            ng-if="schema | extract : field : \'type\' | inArray: [\'objectarray\', \'objarray\']">\n            <label\n              for="editor-field-{{ field_flat }}"\n              class="col-sm-3 control-label"\n              ng-bind-html="schema | extract : field : \'label\'"></label>\n            <div class="col-sm-9">\n              <div class="input-group">\n                <div geodash-btn-info info="{{ schema | extract : field : \'description\' }}"></div>\n                <pre class="form-control" style="height: auto; max-width: 280px;max-height: 100px;">\n                  <span\n                    ng-repeat="x in workspace| extract : field track by $index"\n                    class="input-group"\n                    ng-bind-html="x.title + \' (\'+x.id+\')\'">\n                  </span>\n                </pre>\n                <a\n                  class="geodash-intent input-group-addon btn btn-primary btn-edit"\n                  href="#"\n                  data-intent-name="showModal"\n                  data-intent-data="{{ html5data(\'showModal\', \'geodash-modal-edit-field\', field) }}"\n                  data-intent-ctrl="{{ config.that.id }}">\n                  <i class="fa fa-pencil-square-o "></i>\n                </a>\n                <div geodash-btn-clear target="#editor-field-{{ field_flat }}"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr>\n    <div class="form-group">\n      <div class="col-sm-offset-3 col-sm-9">\n        <button\n          type="button"\n          class="btn btn-success"\n          ng-click="saveConfig()"\n          ng-disabled="\'change_geodashdashboard\' | inArray : perms | not"\n        >Save</button>\n        <button\n          type="button"\n          class="btn btn-success"\n          ng-click="saveAsConfig()"\n        >Save As ...</button>\n        <button\n          type="button"\n          class="btn btn-default">Reset</button>\n        <a\n          class="geodash-intent btn btn-primary"\n          data-intent-name="showModal"\n          data-intent-data="{{ config.html5data.modal_dashboard_config }}"\n          data-intent-ctrl="{{ config.that.id }}">Config</a>\n      </div>\n    </div>\n  </form>\n</div>\n',geodash.templates["modal_edit_field.tpl.html"]='<div\n  id="geodash-modal-edit-field"\n  class="geodash-controller geodash-controller-modal geodash-modal modal fade geodash-edit-field"\n  tabindex="-1"\n  role="dialog"\n  aria-labelledby="myModalLabel">\n  <div id="geodash-edit-field" class="modal-dialog geodash-responsive" role="document">\n    <div\n      ng-if="field_flat | default_if_undefined: false"\n      class="modal-content">\n      <div class="modal-header">\n        <button geodash-btn-close></button>\n        <h4\n          id="myModalLabel"\n          class="modal-title"\n          ng-bind-html="schema | extract : field : \'label\' | prepend : \'Edit / \' | md2html"></h4>\n      </div>\n      <div class="modal-body">\n        <ul class="nav nav-tabs nav-justified" role="tablist">\n          <li label="Input" target="modal-edit-field-pane-input" active="true" geodash-tab></li>\n          <li label="YAML" target="modal-edit-field-pane-yaml" geodash-tab></li>\n          <li label="JSON" target="modal-edit-field-pane-json" geodash-tab></li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-edit-field-pane-input"\n            role="tabpanel"\n            class="tab-pane fade"\n            style="padding: 10px;">\n            <div\n              ng-if="schema | extract : field : \'type\' | inArray: [\'text\', \'string\', \'markdown\', \'md\']">\n              <textarea\n                id="modal-edit-field-{{ field_flat }}"\n                name="modal-edit-field-{{ field_flat }}"\n                class="form-control"\n                placeholder="{{ schema | extract : field : \'placeholder\' }}"\n                rows="15"\n                data-geodash-field-type="{{ schema | extract : field : \'type\' }}"\n                ng-required="schema | extract : field : \'required\'"\n                style="max-width: 100%;"\n                ng-model="value_edit_field"\n                ng-change="validateModalField(field_flat)"></textarea>\n            </div>\n            <div\n              ng-if="schema | extract : field : \'type\' | inArray: [\'textarray\', \'stringarray\']">\n              <div class="input-group">\n                <input\n                  id="editor-field-{{ field_flat }}-backend"\n                  name="editor-field-{{ field_flat }}-backend"\n                  type="text"\n                  class="form-control"\n                  style="display:none;">\n                <div\n                  class="input-group-addon btn btn-primary"\n                  data-toggle="tooltip"\n                  data-placement="bottom"\n                  ng-attr-title="{{ schema | extract : field : \'description\' }}">\n                  <i class="fa fa-info-circle"></i>\n                </div>\n                <div\n                  id="editor-field-{{ field_flat }}-label"\n                  name="editor-field-{{ field_flat }}-label"\n                  class="input-group-addon"\n                  ng-bind-html="schema | extract : field : \'label\'">\n                </div>\n                <input\n                  id="editor-field-{{ field_flat }}"\n                  name="editor-field-{{ field_flat }}"\n                  type="text"\n                  class="typeahead form-control"\n                  style="height: auto;"\n                  data-geodash-field-type="{{ schema | extract : field : \'type\' }}"\n                  ng-required="schema | extract : field : \'required\'"\n                  aria-describedby="editor-field-{{ field_flat }}-label"\n                  data-initial-data="layers"\n                  data-backend="editor-field-{{ field_flat }}-backend"\n                  data-template-empty="<div class=&quot;alert alert-danger empty-message&quot;>Unable to find value</div>"\n                  ng-keyup="keyUpOnField($event, field, field_flat)">\n                <div\n                  class="input-group-addon btn btn-primary btn-show-options"\n                  data-toggle="tooltip"\n                  data-placement="bottom"\n                  title="Show Options."\n                  ng-click="showOptions($event, \'#editor-field-\'+field_flat)">\n                  <i class="fa fa-chevron-down"></i>\n                </div>\n                <div\n                  class="input-group-addon btn btn-success btn-add"\n                  data-toggle="tooltip"\n                  data-placement="bottom"\n                  title="Prepend to list of layers."\n                  ng-click="prependToField($event, field, field_flat)">\n                  <i class="fa fa-plus"></i>\n                </div>\n                <div\n                  class="input-group-addon btn btn-danger btn-clear"\n                  data-clear="#editor-field-{{ field_flat }}"\n                  data-toggle="tooltip"\n                  data-placement="bottom"\n                  title="Clear new layer text.">\n                  <i class="fa fa-times"></i>\n                </div>\n              </div>\n              <br>\n              <div\n                ng-repeat="x in modaleditfield_workspace | extract : field track by $index"\n                class="input-group"\n                style="margin-bottom: 4px;">\n                <div\n                  class="input-group-addon btn btn-default"\n                  style="font-weight: bold;"\n                  ng-bind-html="$index">\n                </div>\n                <div\n                  ng-class="$first ? \'input-group-addon btn btn-default\' : \'input-group-addon btn btn-primary\'"\n                  ng-disabled="$first"\n                  ng-click="up($event, field, field_flat, $index)">\n                  <i class="fa fa-arrow-up"></i>\n                </div>\n                <div\n                  ng-class="$last ? \'input-group-addon btn btn-default\' : \'input-group-addon btn btn-primary\'"\n                  ng-disabled="$last"\n                  ng-click="down($event, field, field_flat, $index)">\n                  <i class="fa fa-arrow-down"></i>\n                </div>\n                <input\n                  id="editor-field-{{ field_flat }}-{{ $index }}"\n                  name="editor-field-{{ field_flat }}-{{ $index }}"\n                  type="text"\n                  class="form-control"\n                  ng-value="x">\n                <div\n                  class="input-group-addon btn btn-danger btn-clear"\n                  ng-click="subtractFromField($event, field, field_flat, $index)">\n                  <i class="fa fa-times"></i>\n                </div>\n              </div>\n            </div>\n            <div\n              ng-if="schema | extract : field : \'type\' | inArray: [\'objectarray\', \'objarray\']">\n              <div>\n                <div\n                  class="btn btn-primary"\n                  data-toggle="tooltip"\n                  data-placement="bottom"\n                  ng-attr-title="{{ schema | extract : field : \'description\' }}">\n                  <i class="fa fa-info-circle"></i>\n                </div>\n                <div\n                  class="btn btn-success btn-add geodash-intent"\n                  data-toggle="tooltip"\n                  data-placement="bottom"\n                  title="Prepend to list."\n                  data-intent-name="switchModal"\n                  data-intent-data="{{ html5data(\'switchModal\', config.that.id , config.edit.target, field, undefined) }}"\n                  data-intent-ctrl="{{ config.that.id }}">\n                  <i class="fa fa-plus"></i>\n                </div>\n              </div>\n              <br>\n              <div\n                ng-repeat="x in modaleditfield_workspace | extract : field track by $index"\n                class="input-group"\n                style="margin-bottom: 4px;">\n                <div\n                  class="input-group-addon btn btn-default"\n                  style="font-weight: bold;"\n                  ng-bind-html="$index">\n                </div>\n                <div\n                  ng-class="$first ? \'input-group-addon btn btn-default\' : \'input-group-addon btn btn-primary\'"\n                  ng-disabled="$first"\n                  ng-click="up($event, field, field_flat, $index)">\n                  <i class="fa fa-arrow-up"></i>\n                </div>\n                <div\n                  ng-class="$last ? \'input-group-addon btn btn-default\' : \'input-group-addon btn btn-primary\'"\n                  ng-disabled="$last"\n                  ng-click="down($event, field, field_flat, $index)">\n                  <i class="fa fa-arrow-down"></i>\n                </div>\n                <span\n                  id="editor-field-{{ field_flat }}-{{ $index }}"\n                  name="editor-field-{{ field_flat }}-{{ $index }}"\n                  type="text"\n                  class="form-control"\n                  ng-bind-html="x.title + \' (\'+x.id+\')\'"></span>\n                <a\n                  class="geodash-intent input-group-addon btn btn-primary btn-edit"\n                  href="#"\n                  data-intent-name="switchModal"\n                  data-intent-data="{{ html5data(\'switchModal\', config.that.id, config.edit.target, field, $index) }}"\n                  data-intent-ctrl="{{ config.that.id }}">\n                  <i class="fa fa-pencil-square-o "></i>\n                </a>\n                <div\n                  class="input-group-addon btn btn-danger btn-clear"\n                  ng-click="subtractFromField($event, field, field_flat, $index)">\n                  <i class="fa fa-times"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            id="modal-edit-field-pane-yaml"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ value_edit_field | yaml : 8 }}</pre>\n          </div>\n          <div\n            id="modal-edit-field-pane-json"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ value_edit_field | json }}</pre>\n          </div>\n        </div>\n        <hr>\n        <div\n          class="btn btn-danger btn-clear"\n          data-clear="#modal-edit-field-{{ field_flat }}, #editor-field-{{ field_flat }}">\n          <i class="fa fa-times"></i>\n        </div>\n      </div>\n      <div class="modal-footer">\n        <button\n          type="button"\n          class="btn btn-success geodash-intent"\n          data-intent-name="saveAndHide"\n          data-intent-data="{{ html5data(\'saveAndHide\', config.that.id, config.save.target, config.save.fields) }}"\n          data-intent-ctrl="{{ config.that.id }}"\n          ng-bind-html="schema | extract : field : \'label\' | prepend : \'Save \' | md2html"\n        ></button>\n        <button\n          type="button"\n          class="btn btn-default geodash-intent"\n          data-intent-name="hideModal"\n          data-intent-data="{{ html5data(\'hideModal\', config.that.id) }}"\n          data-intent-ctrl="{{ config.that.id }}"\n          ng-bind-html="\'Cancel\'"></button>\n      </div>\n    </div>\n  </div>\n</div>\n',geodash.templates["modal_edit_object.tpl.html"]='<div\n  id="geodash-modal-edit-object"\n  class="geodash-controller geodash-controller-modal geodash-modal modal fade geodash-edit-object"\n  tabindex="-1"\n  role="dialog"\n  aria-labelledby="myModalLabel">\n  <div id="geodash-edit-object" class="modal-dialog geodash-responsive" role="document">\n    <div\n      ng-if="objectIndex | default_if_undefined: -1 | gte: 0"\n      class="modal-content">\n      <div class="modal-header">\n        <button\n          type="button"\n          class="close geodash-intent"\n          aria-hidden="true"\n          data-intent-name="switchModal"\n          data-intent-data="{{ html5data(\'switchModal\', config.that.id, \'geodash-modal-edit-field\', prefix_field) }}"\n          data-intent-ctrl="{{ config.that.id }}"\n          ><i class="fa fa-times"></i>\n        </button>\n        <h4\n          id="myModalLabel"\n          class="modal-title"\n          ng-bind-html="schema | extract : prefix_field : \'label\' | prepend : \'Edit / \' | append : \' / \' : object.id | md2html"></h4>\n      </div>\n      <div class="modal-body">\n        <ul class="nav nav-tabs nav-justified" role="tablist">\n          <li label="Input" target="modal-edit-object-pane-input" active="true" geodash-tab></li>\n          <li label="YAML" target="modal-edit-object-pane-yaml" geodash-tab></li>\n          <li label="JSON" target="modal-edit-object-pane-json" geodash-tab></li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-edit-object-pane-input"\n            role="tabpanel"\n            class="tab-pane fade"\n            style="padding: 10px;overflow-y: scroll; max-height:240px;">\n            <form\n              novalidate\n              class="form-horizontal simple-form"\n              ng-if="objectIndex != undefined">\n              <!--\n                Doesn\'t rerun ng-repeat beacuse object_schema.fields is the same\n                Need ng-repeat to be forced to run again when field changes.\n                Throw in a fake ng-if on objectIndex??\n              -->\n              <div\n                ng-repeat="object_field in object_schema.fields track by $index"\n                ng-init="objectFieldIndex = $index; object_field_id = object_field.id; object_field_id_flat = (object_field.id | replace : \'.\' : \'__\' | prepend : prefix_field_flat : \'__\' : objectIndex : \'__\')"\n                class="form-group"\n                style="margin:0; padding-top: 10px; padding-bottom: 10px;"\n                ng-if="when(object_field)"\n                <!-- Start -->\n                <div\n                  ng-if="object_field | extract : \'type\' | inArray: [\'text\', \'string\', \'markdown\', \'md\']">\n                  <label\n                    for="editor-object-field-{{ object_field_id_flat }}"\n                    class="col-sm-3 control-label"\n                    ng-bind-html="object_field | extract : \'label\'"></label>\n                  <div class="col-sm-9">\n                    <div\n                      ng-if="object_field | extract : \'multiline\' | default_if_undefined: \'false\' | inArray: [false, \'false\', \'no\', 0]"\n                      class="input-group">\n                      <div\n                        geodash-btn-info info="{{ object_field | extract : \'description\' }}"></div>\n                      <input\n                        ng-if="object_field | extract : \'options\' | default_if_undefined : [] | length | eq: 0"\n                        id="editor-object-field-{{ object_field_id_flat }}"\n                        name="editor-object-field-{{ object_field_id_flat }}"\n                        type="text"\n                        class="form-control"\n                        placeholder="{{ object_field | extract : \'placeholder\' }}"\n                        data-geodash-field-type="{{ object_field | extract : \'type\' }}"\n                        ng-required="object_field | extract : \'required\'"\n                        ng-value="modaleditobject_workspace_flat | extract : object_field_id_flat"\n                        ng-model="modaleditobject_workspace_flat[object_field_id_flat]"\n                        ng-change="validateField(object_field_id_flat)">\n                      <input\n                        ng-if="object_field | extract : \'options\' | default_if_undefined : [] | length | gt: 0"\n                        id="editor-object-field-{{ object_field_id_flat }}-backend"\n                        name="editor-object-field-{{ object_field_id_flat }}-backend"\n                        type="text"\n                        class="form-control"\n                        style="display:none;"\n                        ng-value="modaleditobject_workspace_flat | extract : object_field_id_flat"\n                        ng-model="modaleditobject_workspace_flat[object_field_id_flat]"\n                        ng-change="validateField(object_field_id_flat)">\n                      <input\n                        ng-if="object_field | extract : \'options\' | default_if_undefined : [] | length | gt: 0"\n                        id="editor-object-field-{{ object_field_id_flat }}"\n                        name="editor-object-field-{{ object_field_id_flat }}"\n                        type="text"\n                        class="typeahead form-control"\n                        placeholder="{{ object_field | extract : \'placeholder\' }}"\n                        data-geodash-field-type="{{ object_field | extract : \'type\' }}"\n                        data-initial-data="{{ object_field | extract : \'options\' }}"\n                        data-backend="editor-object-field-{{ object_field_id_flat }}-backend"\n                        ng-value="modaleditobject_workspace_flat | extract : object_field_id_flat">\n                      <div\n                        ng-if="object_field | extract : \'options\' | default_if_undefined : [] | length | gt: 0"\n                        class="input-group-addon btn btn-primary btn-show-options"\n                        data-toggle="tooltip"\n                        data-placement="bottom"\n                        title="Show Options."\n                        ng-click="showOptions($event, \'#editor-object-field-\' + object_field_id_flat)">\n                        <i class="fa fa-chevron-down"></i>\n                      </div>\n                      <div\n                        class="input-group-addon btn btn-danger btn-clear"\n                        data-clear="#editor-object-field-{{ object_field_id_flat }}">\n                        <i class="fa fa-times"></i>\n                      </div>\n                    </div>\n                    <div\n                      ng-if="object_field | extract : \'multiline\' | default_if_undefined: \'false\' | inArray: [true, \'true\', \'yes\', 1]"\n                      class="input-group">\n                      <div\n                        class="input-group-addon btn btn-primary"\n                        data-toggle="tooltip"\n                        data-placement="left"\n                        ng-attr-title="{{ object_field | extract : \'description\' }}">\n                        <i class="fa fa-info-circle"></i>\n                      </div>\n                      <textarea\n                        id="editor-object-field-{{ object_field_id_flat }}"\n                        name="editor-object-field-{{ object_field_id_flat }}"\n                        class="form-control"\n                        placeholder="{{ object_field | extract : \'placeholder\' }}"\n                        rows="3"\n                        data-geodash-field-type="{{ object_field | extract : \'type\' }}"\n                        ng-required="object_field | extract : \'required\'"\n                        style="max-width: 100%;"\n                        ng-model="modaleditobject_workspace_flat[object_field_id_flat]"\n                        ng-change="validateField(object_field_id_flat)"\n                        ng-bind-html="modaleditobject_workspace_flat | extract : object_field_id_flat"></textarea>\n                      <div\n                        class="input-group-addon btn btn-danger btn-clear"\n                        data-clear="#editor-object-field-{{ object_field_id_flat }}">\n                        <i class="fa fa-times"></i>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  ng-if="object_field | extract : \'type\' | inArray: [\'int\', \'integer\']">\n                  <label\n                    for="editor-object-field-{{ object_field_id_flat }}"\n                    class="col-sm-3 control-label"\n                    ng-bind-html="object_field | extract : \'label\'"></label>\n                  <div class="col-sm-9 input-group">\n                    <div\n                      class="input-group-addon btn btn-primary"\n                      data-toggle="tooltip"\n                      data-placement="left"\n                      ng-attr-title="{{ object_field | extract : \'description\' }}">\n                      <i class="fa fa-info-circle"></i>\n                    </div>\n                    <input\n                      id="editor-object-field-{{ object_field_id_flat }}"\n                      name="editor-object-field-{{ object_field_id_flat }}"\n                      type="number"\n                      class="form-control"\n                      placeholder="{{ object_field | extract : \'placeholder\' }}"\n                      data-geodash-field-type="{{ object_field | extract : \'type\' }}"\n                      ng-required="object_field | extract : \'required\'"\n                      ng-attr-min="{{ object_field | extract : \'minValue\' | default_if_undefined: \'\' }}"\n                      ng-attr-max="{{ object_field | extract : \'maxValue\' | default_if_undefined: \'\' }}"\n                      ng-value="modaleditobject_workspace_flat | extract : object_field_id_flat"\n                      ng-model="modaleditobject_workspace_flat[object_field_id_flat]"\n                      ng-change="validateField(object_field_id_flat)">\n                    <div\n                      class="input-group-addon btn btn-danger btn-clear"\n                      data-clear="#editor-object-field-{{ object_field_id_flat }}">\n                      <i class="fa fa-times"></i>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  ng-if="object_field | extract : \'type\' | inArray: [\'boolean\', \'checkbox\']"\n                  class="col-sm-offset-2 col-sm-10">\n                  <div class="checkbox">\n                    <label>\n                      <input\n                        type="checkbox"\n                        ng-checked="modaleditobject_workspace_flat | extract : object_field_id_flat"\n                        ng-model="modaleditobject_workspace_flat[object_field_id_flat]"\n                        ng-change="validateField(object_field_id_flat)"> {{ object_field | extract : \'label\' }}\n                    </label>\n                  </div>\n                </div>\n                <div\n                  ng-if="object_field | extract : \'type\' | inArray: [\'stringarray\', \'textarray\']">\n                  <label\n                    for="editor-object-field-{{ object_field_id_flat }}"\n                    class="col-sm-3 control-label"\n                    ng-bind-html="object_field | extract : \'label\'"></label>\n                  <div class="col-sm-9">\n                    <div class="input-group">\n                      <div\n                        class="input-group-addon btn btn-primary"\n                        data-toggle="tooltip"\n                        data-placement="left"\n                        ng-attr-title="{{ object_field | extract : \'description\' }}">\n                        <i class="fa fa-info-circle"></i>\n                      </div>\n                      <pre class="form-control" style="height: auto;max-height: 100px;">\n                        <span\n                          ng-repeat="x in modaleditobject_workspace | extract : field track by $index"\n                          class="input-group"\n                          ng-bind-html="x">\n                        </span>\n                      </pre>\n                      <div\n                        class="input-group-addon btn btn-danger btn-clear"\n                        data-clear="#editor-object-field-{{ object_field_id_flat }}">\n                        <i class="fa fa-times"></i>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  ng-if="object_field | extract : \'type\' | inArray: [\'objectarray\', \'objarray\']">\n                  <label\n                    for="editor-object-field-{{ object_field_id_flat }}"\n                    class="col-sm-3 control-label"\n                    ng-bind-html="object_field | extract : \'label\'"></label>\n                  <div class="col-sm-9">\n                    <div class="input-group">\n                      <div\n                        class="input-group-addon btn btn-primary"\n                        data-toggle="tooltip"\n                        data-placement="left"\n                        ng-attr-title="{{ object_field | extract : \'description\' }}">\n                        <i class="fa fa-info-circle"></i>\n                      </div>\n                      <pre class="form-control" style="height: auto; max-width: 280px;max-height: 100px;">\n                        <span\n                          ng-repeat="x in modaleditobject_workspace| extract : object_field_id track by $index"\n                          class="input-group"\n                          style="cusor: default;"\n                          ng-bind-html="x.title + \' (\'+x.id+\')\'"\n                          disabled>\n                        </span>\n                      </pre>\n                      <div\n                        class="input-group-addon btn btn-danger btn-clear"\n                        data-clear="#editor-object-field-{{ object_field_id_flat }}">\n                        <i class="fa fa-times"></i>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!-- End -->\n              </div>\n            </form>\n          </div>\n          <div\n            id="modal-edit-object-pane-yaml"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h4 ng-bind-html="object_field | extract : \'schema\' : \'verbose_singular\' | default_if_undefined : \'Object\' | append : \' as YAML\'"></h4>\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ object | yaml : 8 }}</pre>\n          </div>\n          <div\n            id="modal-edit-object-pane-json"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h4 ng-bind-html="object_field | extract : \'schema\' : \'verbose_singular\' | default_if_undefined : \'Object\' | append : \' as JSON\'"></h4>\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ object | json }}</pre>\n          </div>\n        </div>\n      </div>\n      <div class="modal-footer">\n        <button\n          type="button"\n          class="btn btn-success geodash-intent"\n          data-intent-name="switchModal"\n          data-intent-data="{{ html5data(\'saveObjectAndSwitch\', config.that.id, config.save.target, prefix_field, prefix_field_flat, config.save.fields) }}"\n          data-intent-ctrl="{{ config.that.id }}"\n          ng-bind-html="object_field | extract : \'schema\' : \'verbose_singular\' | default_if_undefined : \'Object\' | prepend : \'Save \'"\n        ></button>\n        <button\n          type="button"\n          class="btn btn-default geodash-intent"\n          data-intent-name="switchModal"\n          data-intent-data="{{ html5data(\'switchModal\', config.that.id, config.save.target, prefix_field) }}"\n          data-intent-ctrl="{{ config.that.id }}"\n          ng-bind-html="schema | extract : prefix_field : \'label\' | prepend : \'Back to \' | md2html"\n        ></button>\n      </div>\n    </div>\n  </div>\n</div>\n';
var MONTHS_NUM=[1,2,3,4,5,6,7,8,9,10,11,12],MONTHS_LONG=["January","February","March","April","May","June","July","August","September","October","November","December"],MONTHS_SHORT3=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],MONTHS_ALL=$.map(MONTHS_NUM,function(e,a){return{num:e,short3:MONTHS_SHORT3[a],"long":MONTHS_LONG[a]}}),DAYSOFTHEWEEK=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];geodash.filters["default"]=function(){return function(e,a){return e||a}},geodash.filters.md2html=function(){return function(e){if(void 0!=e){var a=new showdown.Converter;return html=a.makeHtml(e),html=html.replace(new RegExp("(<a .*?)>(.*?)</a>","gi"),'$1 target="_blank">$2</a>'),html=html.replace(new RegExp("\n","gi"),"<br>"),html=html.replace(new RegExp("<br><br><(h\\d.*?)>","gi"),"<br><$1>"),html=html.replace(new RegExp("<br><br><p>","gi"),"<p>"),html}return""}},geodash.filters.percent=function(){return function(e,a){return 100*e/a}},geodash.filters.tabLabel=function(){return function(e){return 2==e.split(" ").length?e.replace(" ","<br>"):e}},geodash.filters.as_float=function(){return function(e){return 1*e}},geodash.filters.add=function(){return function(e,a){if(Array.isArray(a)){var t=a;return e+t[e%t.length]}if(arguments.length>2){var t=Array.prototype.slice.call(arguments,[1]);return e+t[e%t.length]}return e+a}},geodash.filters.title=function(){return function(e){return"string"===$.type(e)?e.toTitleCase():e}},geodash.filters.as_array=function(){return function(e){return $.isArray(e)?e:$.map(e,function(e,a){return{key:a,item:e}})}},geodash.filters.sortItemsByArray=function(){return function(e,a){return $.isArray(e)?(e=$.grep(e,function(e,t){return-1!=$.inArray(e.key,a)}),e.sort(function(e,t){return $.inArray(e.key,a)-$.inArray(e.key,a)}),e):e}},geodash.filters.breakpoint=function(){return function(e,a){var t=geodash.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=t&&t.length>0?t[a]:-1}},geodash.filters.breakpoints=function(){return function(e){var a=geodash.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=a&&a.length>0?a:[]}},geodash.filters.position_x=function(){return function(e,a,t,n){var i=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},o=i(t)-2*n;return n+o*a/e}},geodash.filters.width_x=function(){return function(e,a,t){var n=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},i=n(a)-2*t;return i/e}},geodash.filters.len=geodash.filters.length=function(){return function(e){return Array.isArray(e)?e.length:angular.isString(e)?e.length:0}},geodash.filters.layer_is_visible=function(){return function(e,a){a=a||$("#geodash-main").scope().state;var t=a.view.featurelayers;return e==a.view.baselayer||-1!=$.inArray(e,t)}},geodash.filters.append=function(){return function(e,a){if(Array.isArray(e))return Array.isArray(a)?e.concat(a):e.push(a);if(angular.isString(e)){var t=Array.prototype.slice.call(arguments,[1]);return e+t.join("")}return e+a}},geodash.filters.default_if_undefined=function(){return function(e,a){return void 0!=e&&null!=e?e:a}},geodash.filters.default_if_undefined_or_blank=function(){return function(e,a){return void 0!=e&&null!=e&&""!=e?e:a}},geodash.filters.extract=function(){return function(e){var a=Array.prototype.slice.call(arguments,[1]);return a.length>0?extract(expand(a),e):null}},geodash.filters.inArray=function(){return function(e,a){return Array.isArray(a)?-1!=a.indexOf(e):!1}},geodash.filters.not=function(){return function(e){return!e}},geodash.filters.prepend=function(){return function(e,a){if(Array.isArray(e))return Array.isArray(a)?a.concat(e):[a].concat(e);if(angular.isString(e)){var t=Array.prototype.slice.call(arguments,[1]);return t.join("")+e}return a+e}},geodash.filters.ternary=function(){return function(e,a,t){return e?a:t}},geodash.filters.ternary_defined=function(){return function(e,a,t){return void 0!=e&&null!=e&&""!=e?a:t}},geodash.filters.yaml=function(){return function(e,a){return void 0!=e?YAML.stringify(e,a||4):""}},geodash.filters.join=function(){return function(e,a){return Array.isArray(e)?e.join(a):e}},geodash.filters.first=function(){return function(e){return Array.isArray(e)?e[0]:e}},geodash.filters.last=function(){return function(e){if(!Array.isArray(e))return e;if(0!=e.length)return e[e.length-1]}},geodash.filters.choose=function(){return function(e,a){if(Array.isArray(a)){var t=a;return e+t[e%t.length]}var t=Array.prototype.slice.call(arguments,[1]);return t[e%t.length]}},geodash.filters.formatBreakpoint=function(){return function(e){return Number.isInteger(e)?geodash.filters.formatInteger()(e,"delimited"," "):$.isNumeric(e)?geodash.filters.formatFloat()(e,2):""+e}},geodash.filters.formatFloat=function(){return function(e,a){return void 0!=e&&""!==e?void 0!=a?e.toFixed(a):e.toString():""}},geodash.filters.formatInteger=function(){return function(e,a,t){if(void 0!=e&&""!==e){if("delimited"==a){t=t||",";for(var n=Math.round(e).toString(),i=new RegExp("(\\d+)(\\d{3})","gi");i.test(n);)n=n.replace(i,"$1"+t+"$2");return n}return Math.round(e).toString()}return""}},geodash.filters.formatArray=function(){return function(e){return Array.isArray(e)?0==e.length?"":1==e.length?e[0]:2==e.length?e.join(" and "):e.slice(0,-1).join(", ")+", and "+e[e.length-1]:e}},geodash.filters.eq=function(){return function(e,a){return angular.isNumber(e)&&angular.isNumber(a)?e==a:!1}},geodash.filters.lte=function(){return function(e,a){return angular.isNumber(e)&&angular.isNumber(a)?a>=e:!1}},geodash.filters.gte=function(){return function(e,a){return angular.isNumber(e)&&angular.isNumber(a)?e>=a:!1}},geodash.filters.gt=function(){return function(e,a){return angular.isNumber(e)&&angular.isNumber(a)?e>a:!1}},geodash.filters.replace=function(){return function(e,a,t){return angular.isString(e)?angular.isString(a)&&angular.isString(t)?"."==a?e.replace(new RegExp("[.]","g"),t):e.replace(a,t):e:""}},geodash.filters.split=function(){return function(e,a){return angular.isString(e)?e.split(a||","):e}},geodash.filters.url_shapefile=function(){return function(e,a){var t="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"SHAPE-ZIP",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=a&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+a.view.extent+")");var o=$.map(i,function(e,a){return encodeURIComponent(a)+"="+encodeURIComponent(e)}).join("&");t=e.wfs.url+"?"+o}return t}},geodash.filters.url_geojson=function(){return function(e,a){var t="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"json",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=a&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+a.view.extent+")");var o=$.map(i,function(e,a){return encodeURIComponent(a)+"="+encodeURIComponent(e)}).join("&");t=e.wfs.url+"?"+o}return t}},geodash.filters.url_kml=function(){return function(e,a){var t="";if("kml"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={mode:"download",layers:n};void 0!=a&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+a.view.extent+")");var o=$.map(i,function(e,a){return encodeURIComponent(a)+"="+encodeURIComponent(e)}).join("&");t=e.kml.url+"?"+o}return t}},geodash.filters.url_describefeaturetype=function(){return function(e){var a="";if("wfs"in e){var t=e.wfs.version||"1.0.0",n={service:"WFS",request:"DescribeFeatureType",version:t,outputFormat:"application/json"},i="";"layers"in e.wms?i=e.wms.layers.unique().join(","):"layers"in e.wfs&&(i=e.wfs.layers.unique().join(",")),"1.1.0"==t||"1.0.0"==t?n.typeName=i:n.typeNames=i;var o=$.map(n,function(e,a){return encodeURIComponent(a)+"="+encodeURIComponent(e)}).join("&");a=e.wfs.url+"?"+o}return a}},geodash.directives.ngX=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngX,function(e){a.attr("x",e)})}}},geodash.directives.ngY=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngY,function(e){a.attr("y",e)})}}},geodash.directives.ngWidth=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngWidth,function(e){a.attr("width",e)})}}},geodash.directives.ngR=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngR,function(e){a.attr("r",e)})}}},geodash.directives.ngFill=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngFill,function(e){a.attr("fill",e)})}}},geodash.directives.onLinkDone=function(){return{restriction:"A",link:function(e,a,t){e.$emit(t.onLinkDone||"link_done",{element:a,attributes:t})}}},geodash.directives.onRepeatDone=function(){return{restriction:"A",link:function(e,a,t){e.$emit(t.onRepeatDone||"repeat_done",{element:a,attributes:t})}}},geodash.directives.geodashModalDashboardConfig=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_dashboard_config.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashTab=function(){return{restrict:"EA",replace:!0,scope:{target:"@target",label:"@label",active:"@active",height:"@height"},templateUrl:"geodash_tab.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashBtnClose=function(){return{restrict:"EA",replace:!0,scope:{dismiss:"@target"},templateUrl:"geodash_btn_close.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashBtnInfo=function(){return{restrict:"EA",replace:!0,scope:{placement:"@placement",info:"@info"},templateUrl:"geodash_btn_info.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashBtnClear=function(){return{restrict:"EA",replace:!0,scope:{target:"@target"},templateUrl:"geodash_btn_clear.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalLayerCarto=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_layer_carto.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalLayerMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_layer_more.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalLayerConfig=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_layer_config.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashSymbolCircle=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_circle.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashSymbolEllipse=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_ellipse.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashSymbolGraduated=function(){return{restrict:"EA",replace:!0,scope:{style:"=style",containerWidth:"@"},templateUrl:"symbol_graduated.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashSymbolGraphic=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_graduated.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashLegendBaselayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_baselayers.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashLegendFeaturelayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_featurelayers.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalWelcome=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_welcome.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalAbout=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_about.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalDownload=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_download.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashMapOverlays=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"map_overlays.tpl.html",link:function(e,a,t){e.style=function(e,a){var t={};return $.extend(t,{top:extract("position.top",a,"auto"),bottom:extract("position.bottom",a,"auto"),left:extract("position.left",a,"auto"),right:extract("position.right",a,"auto"),padding:extract("padding",a,"0"),background:extract("background",a,"transparent"),opacity:extract("opacity",a,"1.0"),width:extract("width",a,"initial"),height:extract("height",a,"initial")}),"text"==e&&$.extend(t,{"font-family":extract("text.font.family",a,"Arial"),"font-size":extract("text.font.size",a,"12px"),"font-style":extract("text.font.style",a,"normal"),"text-shadow":extract("text.shadow",a,"none")}),$.map(t,function(e,a){return a+": "+e}).join(";")+";"},$(a).on("mouseenter",".geodash-map-overlay",function(e,a){$(this).draggable("enable"),$(".geodash-map-grid").addClass("on")}),$(a).on("mouseleave",".geodash-map-overlay",function(e,a){$(this).draggable("disable"),$(".geodash-map-grid").removeClass("on")}),e.$on("overlayLoaded",function(e,a){console.log("overlayLoaded",e,a);var t=(a.attributes.overlayType,$(a.element)),n=t.parents(".geodash-map:first");t.draggable({containment:n,start:function(e,a){$(this).css("cursor","-webkit-grabbing")},drag:function(e,a){},stop:function(e,a){$(this).css("cursor","pointer"),console.log(e,a);var t=a.position,i=$(this).data("overlay-index"),o=geodash.api.getScope("geodash-sidebar-right");if(void 0!=o){var l=n.width(),r=n.height();o.map_config_flat["overlays__"+i+"__position__top"]=t.top<r/2?t.top+"px":"auto",o.map_config_flat["overlays__"+i+"__position__bottom"]=t.top>=r/2?r-t.top+"px":"auto",o.map_config_flat["overlays__"+i+"__position__left"]=t.left<l/2?t.left+"px":"auto",o.map_config_flat["overlays__"+i+"__position__right"]=t.left>=l/2?l-t.left+"px":"auto",setTimeout(function(){o.validateFields(["overlays__"+i+"__position__top","overlays__"+i+"__position__bottom","overlays__"+i+"__position__left","overlays__"+i+"__position__right"])},0)}}})})}}},geodash.directives.geodashserverModalWelcome=function(){return{controller:["$scope",function(e){e.showOptions=geodash.ui.showOptions}],restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_welcome_geodashserver.tpl.html",link:function(e,a,t){setTimeout(function(){geodash.init.typeahead(a),geodashserver.welcome({scope:e})},10)}}},geodash.directives.geodashDashboardEditor=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"dashboard_editor.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalEditField=function(){return{controller:geodash.controllers.controller_modal_edit_field,replace:!0,restrict:"EA",scope:{},templateUrl:"modal_edit_field.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalEditObject=function(){return{controller:geodash.controllers.controller_modal_edit_object,restrict:"EA",replace:!0,scope:{},templateUrl:"modal_edit_object.tpl.html",link:function(e,a,t){}}},geodash.controllers.controller_base=function(e,a,t,n,i,o){},geodash.controllers.controller_legend=function(e,a,t,n,i,o){angular.extend(this,t("GeoDashControllerBase",{$element:a,$scope:e})),e.map_config=i,e.state=n,e.html5data=function(){var e=arguments,a=e[0].toLowerCase();if("togglemodal"==a){var t=(e[1],e[2]),n=e[3];return{id:e[1],"static":{layerID:n.id},dynamic:{layer:[t,n.id]}}}return""},e.updateVariables=function(){var a=e.map_config.legendlayers;if("baselayers"in e.map_config&&void 0!=e.map_config.baselayers){var t=$.grep(e.map_config.baselayers,function(e,t){return-1!=$.inArray(e.id,a)});t.sort(function(e,t){return $.inArray(e.id,a)-$.inArray(t.id,a)}),e.baselayers=t}else e.baselayers=[];if("featurelayers"in e.map_config&&void 0!=e.map_config.featurelayers){var n=$.grep(e.map_config.featurelayers,function(e,t){return-1!=$.inArray(e.id,a)});n.sort(function(e,t){return $.inArray(e.id,a)-$.inArray(t.id,a)}),e.featurelayers=n}else e.featurelayers=[]},e.updateVariables(),e.$watch("map_config.featurelayers",e.updateVariables),e.$watch("map_config.legendlayers",e.updateVariables),e.$watch("state",e.updateVariables);$(a);e.$on("refreshMap",function(a,t){console.log("args: ",t),e.state=t.state})};var highlightFeature=function(e){e.target},init_map=function(e){var a=L.map("map",{attributionControl:geodash.api.opt_b(e,"attributionControl",!1),zoomControl:geodash.api.opt_b(e,"zoomControl",!1),minZoom:geodash.api.opt_i(e,"minZoom",3),maxZoom:geodash.api.opt_i(e,"maxZoom",18)});return a.setView([geodash.api.opt_i(e,["latitude","lat"],0),geodash.api.opt_i(e,["longitude","lon","lng","long"],0)],geodash.api.opt_i(e,["zoom","z"],0)),$.each(geodash.api.opt_j(e,"listeners"),function(e,t){a.on(e,t)}),a};geodash.controllers.controller_map_map=function(e,a,t,n,i,o,l,r,d){var s={click:function(e){var t=e.latlng,n={lat:t.lat,lon:t.lng};geodash.api.intend("clickedOnMap",n,a)},zoomend:function(e){var t={extent:d.map.getBounds().toBBoxString(),z:d.map.getZoom()};geodash.api.intend("viewChanged",t,a)},dragend:function(e){var t=d.map.getCenter(),n={extent:d.map.getBounds().toBBoxString(),lat:t.lat,lon:t.lng};geodash.api.intend("viewChanged",n,a)},moveend:function(e){var t=d.map.getCenter(),n={extent:d.map.getBounds().toBBoxString(),lat:t.lat,lon:t.lng};geodash.api.intend("viewChanged",n,a)}};hasHashValue(["latitude","lat","longitude","lon","lng","zoom","z"]),l.view;d.map=init_map({attributionControl:extract(expand("controls.attribution"),r,!0),zoomControl:extract(expand("controls.zoom"),r,!0),minZoom:extract(expand("view.minZoom"),r,0),maxZoom:extract(expand("view.maxZoom"),r,18),lat:extract(expand("view.latitude"),r,0),lon:extract(expand("view.longitude"),r,0),z:extract(expand("view.zoom"),r,3),listeners:s});var c=geodash.layers.init_baselayers(d.map,r.baselayers);$.extend(d.baselayers,c);var g=r.view.baselayer||r.baselayers[0].id;d.baselayers[g].addTo(d.map),geodash.api.intend("viewChanged",{baselayer:g},a),geodash.api.intend("layerLoaded",{type:"baselayer",layer:g},a),"featurelayers"in r&&void 0!=r.featurelayers&&$.each(r.featurelayers,function(e,t){geodash.layers.init_featurelayer(t.id,t,a,d,r)}),$("#geodash-map-sidebar-toggle-right").click(function(){$(this).toggleClass("sidebar-open sidebar-right-open"),$("#geodash-sidebar-right, #geodash-map").toggleClass("sidebar-open sidebar-right-open"),setTimeout(function(){d.map.invalidateSize({animate:!0,pan:!1})},2e3)}),a.$on("refreshMap",function(e,a){console.log("Refreshing map...");var t=a.state.view.baselayer;$.each(d.baselayers,function(e,a){var n=e==t;d.map.hasLayer(a)&&!n?d.map.removeLayer(a):!d.map.hasLayer(a)&&n&&d.map.addLayer(a)});var n=a.state.view.featurelayers;$.each(d.featurelayers,function(e,a){var t=-1!=$.inArray(e,n);d.map.hasLayer(a)&&!t?d.map.removeLayer(a):!d.map.hasLayer(a)&&t&&d.map.addLayer(a)});var i=$.grep(layersAsArray(d.featurelayers),function(e){return-1!=$.inArray(e.id,n)}),o=sortLayers($.map(i,function(e,a){return e.layer}),!0),l=($.map(d.baselayers,function(e,a){return{id:a,layer:e}}),$.map($.grep(layersAsArray(d.baselayers),function(e){return e.id==t}),function(e,a){return e.layer}));updateRenderOrder(l.concat(o)),setTimeout(function(){d.map._onResize()},0)}),a.$on("changeView",function(e,a){console.log("Refreshing map..."),void 0!=a.layer&&d.map.fitBounds(d.featurelayers[a.layer].getBounds())}),a.$on("openPopup",function(e,a){console.log("Refreshing map..."),void 0!=a.featureLayer&&void 0!=a.feature&&void 0!=a.location&&geodash.popup.openPopup(i,a.featureLayer,a.feature,a.location,d.map,angular.element("#geodash-main").scope().state)})},geodash.controllers.controller_sidebar_geodashserver=function(e,a,t,n,i,o,l,r){angular.extend(this,t("GeoDashControllerBase",{$element:a,$scope:e})),e.config={that:{id:"geodash-sidebar-right"},html5data:{modal_dashboard_config:{id:"geodash-modal-dashboard-config",dynamic:{workspace:["source","workspace"],workspace_flat:["source","workspace_flat"]}}}},e.perms=geodash.perms,e.editor=geodash.initial_data.data.editor,e.workspace={config:l,security:geodash.initial_data.data.security},e.workspace_flat=geodash.api.flatten(e.workspace,void 0),e.schema={config:geodash.initial_data.data.map_config_schema,security:geodash.initial_data.data.security_schema},e.schema_flat=geodash.api.flatten(e.schema,void 0),e.fields_by_pane={},e.value_edit_field=null,e.html5data=geodashserver.html5data,e.updateVariables=function(){for(var a=[],t=0;t<e.editor.panes.length;t++){var n=e.editor.panes[t],i=[];"fields"in n&&angular.isArray(n.fields)&&(i=i.concat(n.fields)),"section"in n&&n.section in e.schema.config&&(i=i.concat($.map(e.schema.config[n.section],function(e,a){return n.section+"."+a}))),a.push({id:n.id,fields:i})}e.fields_by_pane=a},e.updateVariables(),e.$watch("map_config",e.updateVariables),e.$watch("editor",e.updateVariables),e.$watch("schema",e.updateVariables);$(a);e.validateFields=function(a){for(var t=0;t<a.length;t++)e.validateField(a[t])},e.validateField=function(a){if(-1==a.indexOf("__"))e.workspace[a]=e.workspace_flat[a];else{for(var t=a.split("__"),n=e.workspace,i=0;i<t.length-1;i++){var o=t[i];if(!(o in n)){var l=-1;try{l=parseInt(t[i+1],10)}catch(r){l=-1}n[o]=l>=0?[]:{}}n=n[o]}var d=t[t.length-1];if(angular.isArray(n)){if(d>=n.length){for(var s=d-n.length,c=0;s>c;c++)n.push({});n.push(e.workspace_flat[a])}}else n[d]=e.workspace_flat[a]}},e.addToField=function(a,t,n){var i=extract(t.split("."),e.workspace);if(Array.isArray(i)){var o=$("#editor-field-"+n).val();if(angular.isString(o)&&""!=o){var l=i.push(o);e.workspace[t]=l,$.each(geodash.api.flatten(l),function(a,t){e.workspace_flat[n+"__"+a]=t})}}else if(angular.isString(i)){var o=$("#editor-field-"+n).val();angular.isString(o)&&""!=o&&(e.workspace_flat[n]=i+","+o,e.validateField(n))}else if(angular.isNumber(i)){var o=$("#editor-field-"+n).val();angular.isString(o)&&""!=o&&(e.workspace_flat[n]=i+parseFloat(o),e.validateField(n))}$("#editor-field-"+n).val(null);try{$("#editor-field-"+n).typeahead("val",null),$("#editor-field-"+n).typeahead("close")}catch(r){}},e.saveConfig=function(a){var t=$("#geodash-main").scope().state.slug;if(window.confirm("Are you sure you want to save?")){var o={headers:{"Content-Type":"application/json","X-CSRFToken":i.csrftoken}};n.post("/api/dashboard/"+t+"/config/save",e.workspace.config,o).success(function(e){console.log(e),e.success?e.map_config.slug!=t?window.location.href="/dashboard/"+e.config.slug:location.reload():window.alert(e.message)})}},e.saveAsConfig=function(a){var t=$("#geodash-main").scope().state.slug;if(window.confirm("Are you sure you want to save as a new dashboard?  Old one will still exist at old slug.")){if(e.workspace.config.slug==t)return alert("Cannot save as.  Need to specify new unique slug."),1;var o={headers:{"Content-Type":"application/json","X-CSRFToken":i.csrftoken}};n.post("/api/dashboard/config/new",e.workspace.config,o).success(function(e){console.log(e),e.success?window.location.href="/dashboard/"+e.config.slug:window.alert(e.message)})}},setTimeout(function(){$('[data-toggle="tooltip"]',a).tooltip()},0)},geodash.controllers.controller_modal_edit_field=["$scope",function(e){e.config={that:{id:"geodash-modal-edit-field"},workspace:{workspace:"modaleditfield_workspace",workspace_flat:"modaleditfield_workspace_flat"},edit:{target:"geodash-modal-edit-object"},save:{target:"geodash-sidebar-right",fields:{workspace:"modaleditfield_workspace",workspace_flat:"modaleditfield_workspace_flat"}}},e.html5data=geodashserver.html5data,e.updateValue=geodash.api.updateValue,e.value_edit_field=null,e.showOptions=geodash.ui.showOptions,e.validateModalField=function(a){e.value_edit_field=$("#modal-edit-field-"+a).val(),e.modaleditfield_workspace_flat[a]=e.value_edit_field,e.updateValue(a,e[e.config.workspace.map_config_flat],e[e.config.workspace.map_config])},e.updateValues=function(a){for(var t=0;t<a.length;t++)e.updateValue(a[t])},e.up=function(a,t,n,i){var o=e[e.config.workspace.map_config],l=e[e.config.workspace.map_config_flat],r=extract(t.split("."),o);if(Array.isArray(r)){if(i>0){var d=[].concat(r.slice(0,i-1),r[i],r[i-1],r.slice(i+1));o[t]=d,$.each(geodash.api.flatten(d),function(e,a){l[n+"__"+e]=a})}}else angular.isNumber(r)&&(o[n]=r+1,e.updateValue(n,e[e.config.workspace.map_config_flat],e[e.config.workspace.map_config]))},e.down=function(a,t,n,i){var o=e[e.config.workspace.map_config],l=e[e.config.workspace.map_config_flat],r=extract(t.split("."),o);if(Array.isArray(r)){if(i<r.length-1){var d=[].concat(r.slice(0,i),r[i+1],r[i],r.slice(i+2));o[t]=d,$.each(geodash.api.flatten(d),function(e,a){l[n+"__"+e]=a})}}else angular.isNumber(r)&&(l[n]=r-1,e.updateValue(n,e[e.config.workspace.map_config_flat],e[e.config.workspace.map_config]))},e.keyUpOnField=function(a,t,n){13==a.keyCode&&e.prependToField(a,t,n)},e.prependToField=function(a,t,n){var i=e[e.config.workspace.map_config],o=e[e.config.workspace.map_config_flat],l=extract(t.split("."),i);if(Array.isArray(l)){var r=$("#editor-field-"+n).val();if(angular.isString(r)&&""!=r){var d=[r].concat(l);i[t]=d,$.each(geodash.api.flatten(d),function(e,a){o[n+"__"+e]=a})}}else if(angular.isString(l)){var r=$("#editor-field-"+n).val();angular.isString(r)&&""!=r&&(o[n]=r+","+l,e.updateValue(n,e[e.config.workspace.map_config_flat],e[e.config.workspace.map_config]))}$("#editor-field-"+n).val(null);try{$("#editor-field-"+n).typeahead("val",null),$("#editor-field-"+n).typeahead("close")}catch(s){}},e.subtractFromField=function(a,t,n,i){var o=e[e.config.workspace.map_config],l=e[e.config.workspace.map_config_flat],r=extract(t.split("."),o);Array.isArray(r)?(r.splice(i,1),o[t]=r,$.each(geodash.api.flatten(r),function(e,a){l[n+"__"+e]=a}),delete l[n+"__"+r.length]):angular.isString(r)?(l[n]=r.substring(0,i)+r.substring(i+1),e.updateValue(n,e[e.config.workspace.map_config_flat],e[e.config.workspace.map_config])):angular.isNumber(r)&&(l[n]=r-$("#editor-field-"+n).val(),e.updateValue(n,e[e.config.workspace.map_config_flat],e[e.config.workspace.map_config])),$("#editor-field-"+n).val(null);try{$("#editor-field-"+n).typeahead("val",null),$("#editor-field-"+n).typeahead("close")}catch(d){}}}],geodash.controllers.controller_modal_edit_object=["$scope",function(e){e.config={that:{id:"geodash-modal-edit-object"},workspace:{map_config:"modaleditobject_workspace",map_config_flat:"modaleditobject_workspace_flat"},save:{target:"geodash-modal-edit-field",fields:{modaleditfield_workspace:"modaleditobject_workspace",modaleditfield_workspace_flat:"modaleditobject_workspace_flat"}}},e.prefix_field=void 0,e.prefix_field_flat=void 0,e.objectIndex=void 0,e.object=void 0,e.html5data=geodashserver.html5data,e.updateValue=geodash.api.updateValue,e.showOptions=geodash.ui.showOptions,e.when=function(a){if(void 0!=extract("when.field",a,void 0)){var t=e[e.config.workspace.map_config],n=extract([e.prefix_field,e.objectIndex,a.when.field],t,void 0),i=a.when.values||[];return-1!=$.inArray(n,i)}return!0},e.validateFields=function(a){for(var t=0;t<a.length;t++)e.validateField(a[t])},e.validateField=function(a){e.updateValue(a,e[e.config.workspace.map_config_flat],e[e.config.workspace.map_config]),e.object=extract(expand([e.prefix_field,e.objectIndex]),e[e.config.workspace.map_config])}}];var buildPageURL=function(e,a,t){var n=geodash.api.getPage(t.page);if(void 0!=n){var i=e(n)(t),o=[],l=t.view;void 0!=l&&void 0!=l.z&&void 0!=l.lat&&void 0!=l.lon&&(o.push("z="+l.z),o.push("lat="+l.lat.toFixed(4)),o.push("lon="+l.lon.toFixed(4)));var r=t.filters;return r&&$.each(t.filters,function(e,a){$.each(a,function(a,t){o.push(e+":"+a+"="+t)})}),o.length>0&&(i+="#"+o.join("&")),i}};geodash.controllers.controller_main=function(e,a,t,n,i,o,l,r,d,s){a.map_config=r,a.state=geodash.init_state(l,d),a.live=s,a.refreshMap=function(e){a.$broadcast("refreshMap",{state:e})},$.each(geodash.listeners,function(e,t){a.$on(e,t)}),a.$on("stateChanged",function(a,t){console.log("event",a),console.log("args",t);var n=geodash.api.getScope("geodash-main");n.$apply(function(){n.state=$.extend(n.state,t);var a=buildPageURL(e,r,n.state);void 0!=a&&history.replaceState(l,"",a),n.refreshMap(n.state)})}),a.$on("filterChanged",function(a,t){console.log("event",a),console.log("args",t);var n=geodash.api.getScope("geodash-main");n.$apply(function(){n.state.filters[t.layer]=$.extend(n.state.filters[t.layer],t.filter);var a=buildPageURL(e,r,n.state);void 0!=a&&history.replaceState(l,"",a),n.refreshMap(n.state)})}),a.$on("selectStyle",function(a,t){console.log("event",a),console.log("args",t);var n=geodash.api.getScope("geodash-main");n.$apply(function(){n.state.styles[t.layer]=t.style;var a=buildPageURL(e,r,n.state);void 0!=a&&history.replaceState(l,"",a),n.refreshMap(n.state)})}),a.$on("viewChanged",function(a,t){console.log("event",a),console.log("args",t);var n=geodash.api.getScope("geodash-main");n.state.view=$.extend(n.state.view,t);var i=buildPageURL(e,r,n.state);void 0!=i&&history.replaceState(l,"",i)}),a.$on("layerLoaded",function(e,a){var t=geodash.api.getScope("geodash-main"),n=a.type,i=a.layer,o=void 0!=a.visible?a.visible:!0;"featurelayer"==n?o&&t.state.view.featurelayers.push(i):"baselayer"==n&&(t.state.view.baselayer=i)}),a.$on("showLayer",function(e,a){console.log("event",e),console.log("args",a);var t=geodash.api.getScope("geodash-main"),n=a.layer;-1==$.inArray(n,t.state.view.featurelayers)&&(t.state.view.featurelayers.push(n),t.refreshMap(t.state))}),a.$on("hideLayer",function(e,a){console.log("event",e),console.log("args",a);var t=geodash.api.getScope("geodash-main"),n=a.layer,i=$.inArray(n,t.state.view.featurelayers);-1!=i&&(t.state.view.featurelayers.splice(i,1),t.refreshMap(t.state))}),a.$on("showLayers",function(e,a){console.log("event",e),console.log("args",a);for(var t=geodash.api.getScope("geodash-main"),n=a.layers,i=0;i<n.length;i++){var o=n[i];-1==$.inArray(o,t.state.view.featurelayers)&&(t.state.view.featurelayers.push(o),t.refreshMap(t.state))}}),a.$on("hideLayers",function(e,a){console.log("event",e),console.log("args",a);for(var t=geodash.api.getScope("geodash-main"),n=a.layers,i=0;i<n.length;i++){var o=a.layers[i],l=$.inArray(o,t.state.view.featurelayers);-1!=l&&(t.state.view.featurelayers.splice(l,1),t.refreshMap(t.state))}}),a.$on("switchBaseLayer",function(e,a){console.log("event",e),console.log("args",a);var t=geodash.api.getScope("geodash-main");t.state.view.baselayer=a.layer,t.refreshMap(t.state)}),a.$on("zoomToLayer",function(e,a){var t=geodash.api.getScope("geodash-main"),n=a.layer,i=$.inArray(n,t.state.view.featurelayers);-1!=i&&t.$broadcast("changeView",{layer:n})}),a.$on("clickedOnMap",function(e,a){console.log("event",e),console.log("args",a);var t=geodash.api.getScope("geodash-main"),n=t.state.view.z,l=t.state.view.featurelayers;console.log("visibleFeatureLayers",l);for(var r={},d={},s=[],c=0;c<l.length;c++){var g=geodash.api.getFeatureLayer(l[c],{scope:t});if("wfs"in g&&void 0!=g.wfs)for(var p={service:"wfs",version:g.wfs.version,request:"GetFeature",srsName:"EPSG:4326"},f=new L.LatLng(a.lat,a.lon),h=geodash.tilemath.point_to_bbox(a.lon,a.lat,n,4).join(","),u=g.wfs.layers||g.wms.layers||[],m=0;m<u.length;m++){typeName=u[m];var b=g.wfs.url+"?"+$.param($.extend(p,{typeNames:typeName,bbox:h}));s.push(b),d[typeName.toLowerCase()]=geodash.layers.aggregate_fields(g),r[typeName.toLowerCase()]=g}}o.all(geodash.http.build_promises(i,s)).then(function(e){var a=geodash.http.build_features(e,d);if(console.log("Features: ",a),a.length>0){var n=geodash.vecmath.getClosestFeatureAndLocation(a,f),i=r[n.feature.featuretype];t.$broadcast("openPopup",{featureLayer:i,feature:n.feature,location:{lon:n.location.lng,lat:n.location.lat}})}})})};var init_geodashserver_controller_main=function(e,a){geodash.init_controller(e,a,geodash.controllers.controller_main);var t=[".geodash-controller.geodash-about",".geodash-controller.geodash-download",".geodash-controller.geodash-dashboard-config","[geodash-controller='geodash-modal']","[geodash-controller='geodash-base']"].join(", ");geodash.init_controllers(e,a,[{selector:t,controller:geodash.controllers.controller_base}]),geodash.init_controllers(e,a,[{selector:".geodash-controller.geodash-sidebar.geodash-sidebar-right",controller:geodash.controllers.controller_sidebar_geodashserver}]),$("[geodash-controller='geodash-map']",e).each(function(){
geodash.init_controller($(this),a,geodash.controllers.controller_base),geodash.init_controllers($(this),a,[{selector:"[geodash-controller='geodash-map-map']",controller:geodash.controllers.controller_map_map},{selector:"[geodash-controller='geodashserver-welcome']",controller:geodash.controllers.controller_geodashserver_welcome},{selector:"[geodash-controller='geodash-map-legend']",controller:geodash.controllers.controller_legend}])})};